package jpize.gl;

import java.nio.Buffer;
import java.nio.ByteBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;

public interface IGL32 extends IGL31 {

    int GL_CONTEXT_FLAG_DEBUG_BIT = 2;
    int GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = 4;
    int GL_GEOMETRY_SHADER_BIT = 4;
    int GL_TESS_CONTROL_SHADER_BIT = 8;
    int GL_TESS_EVALUATION_SHADER_BIT = 16;
    int GL_QUADS = 7;
    int GL_LINES_ADJACENCY = 10;
    int GL_LINE_STRIP_ADJACENCY = 11;
    int GL_TRIANGLES_ADJACENCY = 12;
    int GL_TRIANGLE_STRIP_ADJACENCY = 13;
    int GL_PATCHES = 14;
    int GL_STACK_OVERFLOW = 1283;
    int GL_STACK_UNDERFLOW = 1284;
    int GL_CONTEXT_LOST = 1287;
    int GL_TEXTURE_BORDER_COLOR = 4100;
    int GL_VERTEX_ARRAY = 32884;
    int GL_CLAMP_TO_BORDER = 33069;
    int GL_CONTEXT_FLAGS = 33310;
    int GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = 33313;
    int GL_DEBUG_OUTPUT_SYNCHRONOUS = 33346;
    int GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 33347;
    int GL_DEBUG_CALLBACK_FUNCTION = 33348;
    int GL_DEBUG_CALLBACK_USER_PARAM = 33349;
    int GL_DEBUG_SOURCE_API = 33350;
    int GL_DEBUG_SOURCE_WINDOW_SYSTEM = 33351;
    int GL_DEBUG_SOURCE_SHADER_COMPILER = 33352;
    int GL_DEBUG_SOURCE_THIRD_PARTY = 33353;
    int GL_DEBUG_SOURCE_APPLICATION = 33354;
    int GL_DEBUG_SOURCE_OTHER = 33355;
    int GL_DEBUG_TYPE_ERROR = 33356;
    int GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = 33357;
    int GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = 33358;
    int GL_DEBUG_TYPE_PORTABILITY = 33359;
    int GL_DEBUG_TYPE_PERFORMANCE = 33360;
    int GL_DEBUG_TYPE_OTHER = 33361;
    int GL_LOSE_CONTEXT_ON_RESET = 33362;
    int GL_GUILTY_CONTEXT_RESET = 33363;
    int GL_INNOCENT_CONTEXT_RESET = 33364;
    int GL_UNKNOWN_CONTEXT_RESET = 33365;
    int GL_RESET_NOTIFICATION_STRATEGY = 33366;
    int GL_LAYER_PROVOKING_VERTEX = 33374;
    int GL_UNDEFINED_VERTEX = 33376;
    int GL_NO_RESET_NOTIFICATION = 33377;
    int GL_DEBUG_TYPE_MARKER = 33384;
    int GL_DEBUG_TYPE_PUSH_GROUP = 33385;
    int GL_DEBUG_TYPE_POP_GROUP = 33386;
    int GL_DEBUG_SEVERITY_NOTIFICATION = 33387;
    int GL_MAX_DEBUG_GROUP_STACK_DEPTH = 33388;
    int GL_DEBUG_GROUP_STACK_DEPTH = 33389;
    int GL_BUFFER = 33504;
    int GL_SHADER = 33505;
    int GL_PROGRAM = 33506;
    int GL_QUERY = 33507;
    int GL_PROGRAM_PIPELINE = 33508;
    int GL_SAMPLER = 33510;
    int GL_MAX_LABEL_LENGTH = 33512;
    int GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 34924;
    int GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 34925;
    int GL_GEOMETRY_SHADER_INVOCATIONS = 34943;
    int GL_GEOMETRY_VERTICES_OUT = 35094;
    int GL_GEOMETRY_INPUT_TYPE = 35095;
    int GL_GEOMETRY_OUTPUT_TYPE = 35096;
    int GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 35372;
    int GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 35378;
    int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 35881;
    int GL_TEXTURE_BUFFER = 35882;
    int GL_TEXTURE_BUFFER_BINDING = 35882;
    int GL_MAX_TEXTURE_BUFFER_SIZE = 35883;
    int GL_TEXTURE_BINDING_BUFFER = 35884;
    int GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 35885;
    int GL_SAMPLE_SHADING = 35894;
    int GL_MIN_SAMPLE_SHADING_VALUE = 35895;
    int GL_PRIMITIVES_GENERATED = 35975;
    int GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 36263;
    int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 36264;
    int GL_SAMPLER_BUFFER = 36290;
    int GL_INT_SAMPLER_BUFFER = 36304;
    int GL_UNSIGNED_INT_SAMPLER_BUFFER = 36312;
    int GL_GEOMETRY_SHADER = 36313;
    int GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 36319;
    int GL_MAX_GEOMETRY_OUTPUT_VERTICES = 36320;
    int GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 36321;
    int GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 36382;
    int GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 36383;
    int GL_FIRST_VERTEX_CONVENTION = 36429;
    int GL_LAST_VERTEX_CONVENTION = 36430;
    int GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 36442;
    int GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 36443;
    int GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 36444;
    int GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 36445;
    int GL_PATCH_VERTICES = 36466;
    int GL_TESS_CONTROL_OUTPUT_VERTICES = 36469;
    int GL_TESS_GEN_MODE = 36470;
    int GL_TESS_GEN_SPACING = 36471;
    int GL_TESS_GEN_VERTEX_ORDER = 36472;
    int GL_TESS_GEN_POINT_MODE = 36473;
    int GL_ISOLINES = 36474;
    int GL_FRACTIONAL_ODD = 36475;
    int GL_FRACTIONAL_EVEN = 36476;
    int GL_MAX_PATCH_VERTICES = 36477;
    int GL_MAX_TESS_GEN_LEVEL = 36478;
    int GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 36479;
    int GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 36480;
    int GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 36481;
    int GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 36482;
    int GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 36483;
    int GL_MAX_TESS_PATCH_COMPONENTS = 36484;
    int GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 36485;
    int GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 36486;
    int GL_TESS_EVALUATION_SHADER = 36487;
    int GL_TESS_CONTROL_SHADER = 36488;
    int GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 36489;
    int GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 36490;
    int GL_TEXTURE_CUBE_MAP_ARRAY = 36873;
    int GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 36874;
    int GL_SAMPLER_CUBE_MAP_ARRAY = 36876;
    int GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 36877;
    int GL_INT_SAMPLER_CUBE_MAP_ARRAY = 36878;
    int GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 36879;
    int GL_IMAGE_BUFFER = 36945;
    int GL_IMAGE_CUBE_MAP_ARRAY = 36948;
    int GL_INT_IMAGE_BUFFER = 36956;
    int GL_INT_IMAGE_CUBE_MAP_ARRAY = 36959;
    int GL_UNSIGNED_INT_IMAGE_BUFFER = 36967;
    int GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 36970;
    int GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = 37067;
    int GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 37068;
    int GL_MAX_GEOMETRY_IMAGE_UNIFORMS = 37069;
    int GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = 37079;
    int GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = 37080;
    int GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = 37081;
    int GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 37122;
    int GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 37125;
    int GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 37131;
    int GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 37132;
    int GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 37133;
    int GL_MAX_GEOMETRY_INPUT_COMPONENTS = 37155;
    int GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 37156;
    int GL_MAX_DEBUG_MESSAGE_LENGTH = 37187;
    int GL_MAX_DEBUG_LOGGED_MESSAGES = 37188;
    int GL_DEBUG_LOGGED_MESSAGES = 37189;
    int GL_DEBUG_SEVERITY_HIGH = 37190;
    int GL_DEBUG_SEVERITY_MEDIUM = 37191;
    int GL_DEBUG_SEVERITY_LOW = 37192;
    int GL_TEXTURE_BUFFER_OFFSET = 37277;
    int GL_TEXTURE_BUFFER_SIZE = 37278;
    int GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = 37279;
    int GL_MULTIPLY = 37524;
    int GL_SCREEN = 37525;
    int GL_OVERLAY = 37526;
    int GL_DARKEN = 37527;
    int GL_LIGHTEN = 37528;
    int GL_COLORDODGE = 37529;
    int GL_COLORBURN = 37530;
    int GL_HARDLIGHT = 37531;
    int GL_SOFTLIGHT = 37532;
    int GL_DIFFERENCE = 37534;
    int GL_EXCLUSION = 37536;
    int GL_HSL_HUE = 37549;
    int GL_HSL_SATURATION = 37550;
    int GL_HSL_COLOR = 37551;
    int GL_HSL_LUMINOSITY = 37552;
    int GL_PRIMITIVE_BOUNDING_BOX = 37566;
    int GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 37581;
    int GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 37582;
    int GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 37583;
    int GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = 37587;
    int GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 37588;
    int GL_MAX_GEOMETRY_ATOMIC_COUNTERS = 37589;
    int GL_DEBUG_OUTPUT = 37600;
    int GL_IS_PER_PATCH = 37607;
    int GL_REFERENCED_BY_TESS_CONTROL_SHADER = 37639;
    int GL_REFERENCED_BY_TESS_EVALUATION_SHADER = 37640;
    int GL_REFERENCED_BY_GEOMETRY_SHADER = 37641;
    int GL_FRAMEBUFFER_DEFAULT_LAYERS = 37650;
    int GL_MAX_FRAMEBUFFER_LAYERS = 37655;
    int GL_MULTISAMPLE_LINE_WIDTH_RANGE = 37761;
    int GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY = 37762;
    int GL_COMPRESSED_RGBA_ASTC_4x4 = 37808;
    int GL_COMPRESSED_RGBA_ASTC_5x4 = 37809;
    int GL_COMPRESSED_RGBA_ASTC_5x5 = 37810;
    int GL_COMPRESSED_RGBA_ASTC_6x5 = 37811;
    int GL_COMPRESSED_RGBA_ASTC_6x6 = 37812;
    int GL_COMPRESSED_RGBA_ASTC_8x5 = 37813;
    int GL_COMPRESSED_RGBA_ASTC_8x6 = 37814;
    int GL_COMPRESSED_RGBA_ASTC_8x8 = 37815;
    int GL_COMPRESSED_RGBA_ASTC_15 = 37816;
    int GL_COMPRESSED_RGBA_ASTC_16 = 37817;
    int GL_COMPRESSED_RGBA_ASTC_18 = 37818;
    int GL_COMPRESSED_RGBA_ASTC_116 = 37819;
    int GL_COMPRESSED_RGBA_ASTC_12x10 = 37820;
    int GL_COMPRESSED_RGBA_ASTC_12x12 = 37821;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 = 37840;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 = 37841;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 = 37842;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 = 37843;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 = 37844;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 = 37845;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 = 37846;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 = 37847;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_15 = 37848;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_16 = 37849;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_18 = 37850;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_116 = 37851;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 = 37852;
    int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 = 37853;

    interface DebugProc {
        void onMessage(int source, int type, int id, int severity, String message);
    }

    void glBlendBarrier();
    void glCopyImageSubData(int srcName, int srcTarget, int srcLevel, int srcX, int srcY, int srcZ, int dstName, int dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
    void glDebugMessageControl(int source, int type, int severity, IntBuffer ids, boolean enabled);
    void glDebugMessageInsert(int source, int type, int id, int severity, String buf);
    void glDebugMessageCallback(DebugProc callback);
    int glGetDebugMessageLog(int count, IntBuffer sources, IntBuffer types, IntBuffer ids, IntBuffer severities, IntBuffer lengths, ByteBuffer messageLog);
    void glPushDebugGroup(int source, int id, String message);
    void glPopDebugGroup();
    void glObjectLabel(int identifier, int name, String label);
    String glGetObjectLabel(int identifier, int name);
    long glGetPointerv(int pname);
    void glEnablei(int target, int index);
    void glDisablei(int target, int index);
    void glBlendEquationi(int buf, int mode);
    void glBlendEquationSeparatei(int buf, int modeRGB, int modeAlpha);
    void glBlendFunci(int buf, int src, int dst);
    void glBlendFuncSeparatei(int buf, int srcRGB, int dstRGB, int srcAlpha, int dstAlpha);
    void glColorMaski(int index, boolean r, boolean g, boolean b, boolean a);
    boolean glIsEnabledi(int target, int index);
    void glDrawElementsBaseVertex(int mode, int count, int type, Buffer indices, int basevertex);
    void glDrawRangeElementsBaseVertex(int mode, int start, int end, int count, int type, Buffer indices, int basevertex);
    void glDrawElementsInstancedBaseVertex(int mode, int count, int type, Buffer indices, int instanceCount, int basevertex);
    void glDrawElementsInstancedBaseVertex(int mode, int count, int type, int indicesOffset, int instanceCount, int basevertex);
    void glFramebufferTexture(int target, int attachment, int texture, int level);
    int glGetGraphicsResetStatus();
    void glReadnPixels(int x, int y, int width, int height, int format, int type, int bufSize, Buffer data);
    void glGetnUniformfv(int program, int location, FloatBuffer params);
    void glGetnUniformiv(int program, int location, IntBuffer params);
    void glGetnUniformuiv(int program, int location, IntBuffer params);
    void glMinSampleShading(float value);
    void glPatchParameteri(int pname, int value);
    void glTexParameterIiv(int target, int pname, IntBuffer params);
    void glTexParameterIuiv(int target, int pname, IntBuffer params);
    void glGetTexParameterIiv(int target, int pname, IntBuffer params);
    void glGetTexParameterIuiv(int target, int pname, IntBuffer params);
    void glSamplerParameterIiv(int sampler, int pname, IntBuffer param);
    void glSamplerParameterIuiv(int sampler, int pname, IntBuffer param);
    void glGetSamplerParameterIiv(int sampler, int pname, IntBuffer params);
    void glGetSamplerParameterIuiv(int sampler, int pname, IntBuffer params);
    void glTexBuffer(int target, int internalformat, int buffer);
    void glTexBufferRange(int target, int internalformat, int buffer, int offset, int size);
    void glTexStorage3DMultisample(int target, int samples, int internalformat, int width, int height, int depth, boolean fixedsamplelocations);

}