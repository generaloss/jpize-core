package jpize.opengl;

import java.nio.ByteBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;

public interface IGL33 extends IGL32 {

    int GL_SRC1_COLOR = 35065;
    int GL_ONE_MINUS_SRC1_COLOR = 35066;
    int GL_ONE_MINUS_SRC1_ALPHA = 35067;
    int GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 35068;
    int GL_ANY_SAMPLES_PASSED = 35887;
    int GL_SAMPLER_BINDING = 35097;
    int GL_RGB10_A2UI = 36975;
    int GL_TEXTURE_SWIZZLE_R = 36418;
    int GL_TEXTURE_SWIZZLE_G = 36419;
    int GL_TEXTURE_SWIZZLE_B = 36420;
    int GL_TEXTURE_SWIZZLE_A = 36421;
    int GL_TEXTURE_SWIZZLE_RGBA = 36422;
    int GL_TIME_ELAPSED = 35007;
    int GL_TIMESTAMP = 36392;
    int GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 35070;
    int GL_INT_2_10_10_10_REV = 36255;

    void nglBindFragDataLocationIndexed(int program, int colorNumber, int index, long name);
    void glBindFragDataLocationIndexed(int program, int colorNumber, int index, ByteBuffer name);
    void glBindFragDataLocationIndexed(int program, int colorNumber, int index, CharSequence name);
    int nglGetFragDataIndex(int program, long name);
    int glGetFragDataIndex(int program, ByteBuffer name);
    int glGetFragDataIndex(int program, CharSequence name);
    void nglGenSamplers(int count, long samplers);
    void glGenSamplers(IntBuffer samplers);
    int glGenSamplers();
    void nglDeleteSamplers(int count, long samplers);
    void glDeleteSamplers(IntBuffer samplers);
    void glDeleteSamplers(int sampler);
    boolean glIsSampler(int sampler);
    void glBindSampler(int unit, int sampler);
    void glSamplerParameteri(int sampler, int pname, int param);
    void glSamplerParameterf(int sampler, int pname, float param);
    void nglSamplerParameteriv(int sampler, int pname, long params);
    void glSamplerParameteriv(int sampler, int pname, IntBuffer params);
    void nglSamplerParameterfv(int sampler, int pname, long params);
    void glSamplerParameterfv(int sampler, int pname, FloatBuffer params);
    void nglSamplerParameterIiv(int sampler, int pname, long params);
    void glSamplerParameterIiv(int sampler, int pname, IntBuffer params);
    void nglSamplerParameterIuiv(int sampler, int pname, long params);
    void glSamplerParameterIuiv(int sampler, int pname, IntBuffer params);
    void nglGetSamplerParameteriv(int sampler, int pname, long params);
    void glGetSamplerParameteriv(int sampler, int pname, IntBuffer params);
    int glGetSamplerParameteri(int sampler, int pname);
    void nglGetSamplerParameterfv(int sampler, int pname, long params);
    void glGetSamplerParameterfv(int sampler, int pname, FloatBuffer params);
    float glGetSamplerParameterf(int sampler, int pname);
    void nglGetSamplerParameterIiv(int sampler, int pname, long params);
    void glGetSamplerParameterIiv(int sampler, int pname, IntBuffer params);
    int glGetSamplerParameterIi(int sampler, int pname);
    void nglGetSamplerParameterIuiv(int sampler, int pname, long params);
    void glGetSamplerParameterIuiv(int sampler, int pname, IntBuffer params);
    int glGetSamplerParameterIui(int sampler, int pname);
    void glQueryCounter(int id, int target);
    void nglGetQueryObjecti64v(int id, int pname, long params);
    void glGetQueryObjecti64v(int id, int pname, LongBuffer params);
    void glGetQueryObjecti64v(int id, int pname, long params);
    long glGetQueryObjecti64(int id, int pname);
    void nglGetQueryObjectui64v(int id, int pname, long params);
    void glGetQueryObjectui64v(int id, int pname, LongBuffer params);
    void glGetQueryObjectui64v(int id, int pname, long params);
    long glGetQueryObjectui64(int id, int pname);
    void glVertexAttribDivisor(int index, int divisor);
    void glVertexP2ui(int var0, int var1);
    void glVertexP3ui(int var0, int var1);
    void glVertexP4ui(int var0, int var1);
    void nglVertexP2uiv(int var0, long var1);
    void glVertexP2uiv(int type, IntBuffer value);
    void nglVertexP3uiv(int var0, long var1);
    void glVertexP3uiv(int type, IntBuffer value);
    void nglVertexP4uiv(int var0, long var1);
    void glVertexP4uiv(int type, IntBuffer value);
    void glTexCoordP1ui(int var0, int var1);
    void glTexCoordP2ui(int var0, int var1);
    void glTexCoordP3ui(int var0, int var1);
    void glTexCoordP4ui(int var0, int var1);
    void nglTexCoordP1uiv(int var0, long var1);
    void glTexCoordP1uiv(int type, IntBuffer coords);
    void nglTexCoordP2uiv(int var0, long var1);
    void glTexCoordP2uiv(int type, IntBuffer coords);
    void nglTexCoordP3uiv(int var0, long var1);
    void glTexCoordP3uiv(int type, IntBuffer coords);
    void nglTexCoordP4uiv(int var0, long var1);
    void glTexCoordP4uiv(int type, IntBuffer coords);
    void glMultiTexCoordP1ui(int var0, int var1, int var2);
    void glMultiTexCoordP2ui(int var0, int var1, int var2);
    void glMultiTexCoordP3ui(int var0, int var1, int var2);
    void glMultiTexCoordP4ui(int var0, int var1, int var2);
    void nglMultiTexCoordP1uiv(int var0, int var1, long var2);
    void glMultiTexCoordP1uiv(int texture, int type, IntBuffer coords);
    void nglMultiTexCoordP2uiv(int var0, int var1, long var2);
    void glMultiTexCoordP2uiv(int texture, int type, IntBuffer coords);
    void nglMultiTexCoordP3uiv(int var0, int var1, long var2);
    void glMultiTexCoordP3uiv(int texture, int type, IntBuffer coords);
    void nglMultiTexCoordP4uiv(int var0, int var1, long var2);
    void glMultiTexCoordP4uiv(int texture, int type, IntBuffer coords);
    void glNormalP3ui(int var0, int var1);
    void nglNormalP3uiv(int var0, long var1);
    void glNormalP3uiv(int type, IntBuffer coords);
    void glColorP3ui(int var0, int var1);
    void glColorP4ui(int var0, int var1);
    void nglColorP3uiv(int var0, long var1);
    void glColorP3uiv(int type, IntBuffer color);
    void nglColorP4uiv(int var0, long var1);
    void glColorP4uiv(int type, IntBuffer color);
    void glSecondaryColorP3ui(int var0, int var1);
    void nglSecondaryColorP3uiv(int var0, long var1);
    void glSecondaryColorP3uiv(int type, IntBuffer color);
    void glVertexAttribP1ui(int index, int type, boolean normalized, int value);
    void glVertexAttribP2ui(int index, int type, boolean normalized, int value);
    void glVertexAttribP3ui(int index, int type, boolean normalized, int value);
    void glVertexAttribP4ui(int index, int type, boolean normalized, int value);
    void nglVertexAttribP1uiv(int index, int type, boolean normalized, long value);
    void glVertexAttribP1uiv(int index, int type, boolean normalized, IntBuffer value);
    void nglVertexAttribP2uiv(int index, int type, boolean normalized, long value);
    void glVertexAttribP2uiv(int index, int type, boolean normalized, IntBuffer value);
    void nglVertexAttribP3uiv(int index, int type, boolean normalized, long value);
    void glVertexAttribP3uiv(int index, int type, boolean normalized, IntBuffer value);
    void nglVertexAttribP4uiv(int index, int type, boolean normalized, long value);
    void glVertexAttribP4uiv(int index, int type, boolean normalized, IntBuffer value);
    void glGenSamplers(int[] samplers);
    void glDeleteSamplers(int[] samplers);
    void glSamplerParameteriv(int sampler, int pname, int[] params);
    void glSamplerParameterfv(int sampler, int pname, float[] params);
    void glSamplerParameterIiv(int sampler, int pname, int[] params);
    void glSamplerParameterIuiv(int sampler, int pname, int[] params);
    void glGetSamplerParameteriv(int sampler, int pname, int[] params);
    void glGetSamplerParameterfv(int sampler, int pname, float[] params);
    void glGetSamplerParameterIiv(int sampler, int pname, int[] params);
    void glGetSamplerParameterIuiv(int sampler, int pname, int[] params);
    void glGetQueryObjecti64v(int id, int pname, long[] params);
    void glGetQueryObjectui64v(int id, int pname, long[] params);
    void glVertexP2uiv(int type, int[] value);
    void glVertexP3uiv(int type, int[] value);
    void glVertexP4uiv(int type, int[] value);
    void glTexCoordP1uiv(int type, int[] coords);
    void glTexCoordP2uiv(int type, int[] coords);
    void glTexCoordP3uiv(int type, int[] coords);
    void glTexCoordP4uiv(int type, int[] coords);
    void glMultiTexCoordP1uiv(int texture, int type, int[] coords);
    void glMultiTexCoordP2uiv(int texture, int type, int[] coords);
    void glMultiTexCoordP3uiv(int texture, int type, int[] coords);
    void glMultiTexCoordP4uiv(int texture, int type, int[] coords);
    void glNormalP3uiv(int type, int[] coords);
    void glColorP3uiv(int type, int[] color);
    void glColorP4uiv(int type, int[] color);
    void glSecondaryColorP3uiv(int type, int[] color);
    void glVertexAttribP1uiv(int index, int type, boolean normalized, int[] value);
    void glVertexAttribP2uiv(int index, int type, boolean normalized, int[] value);
    void glVertexAttribP3uiv(int index, int type, boolean normalized, int[] value);
    void glVertexAttribP4uiv(int index, int type, boolean normalized, int[] value);
    
}
