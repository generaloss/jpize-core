package jpize.opengl;

import java.nio.ByteBuffer;
import java.nio.DoubleBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;

public interface IGL40 extends IGL33 {

    int GL_DRAW_INDIRECT_BUFFER = 36671;
    int GL_DRAW_INDIRECT_BUFFER_BINDING = 36675;
    int GL_GEOMETRY_SHADER_INVOCATIONS = 34943;
    int GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 36442;
    int GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 36443;
    int GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 36444;
    int GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 36445;
    int GL_DOUBLE_VEC2 = 36860;
    int GL_DOUBLE_VEC3 = 36861;
    int GL_DOUBLE_VEC4 = 36862;
    int GL_DOUBLE_MAT2 = 36678;
    int GL_DOUBLE_MAT3 = 36679;
    int GL_DOUBLE_MAT4 = 36680;
    int GL_DOUBLE_MAT2x3 = 36681;
    int GL_DOUBLE_MAT2x4 = 36682;
    int GL_DOUBLE_MAT3x2 = 36683;
    int GL_DOUBLE_MAT3x4 = 36684;
    int GL_DOUBLE_MAT4x2 = 36685;
    int GL_DOUBLE_MAT4x3 = 36686;
    int GL_SAMPLE_SHADING = 35894;
    int GL_MIN_SAMPLE_SHADING_VALUE = 35895;
    int GL_ACTIVE_SUBROUTINES = 36325;
    int GL_ACTIVE_SUBROUTINE_UNIFORMS = 36326;
    int GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 36423;
    int GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 36424;
    int GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 36425;
    int GL_MAX_SUBROUTINES = 36327;
    int GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 36328;
    int GL_NUM_COMPATIBLE_SUBROUTINES = 36426;
    int GL_COMPATIBLE_SUBROUTINES = 36427;
    int GL_PATCHES = 14;
    int GL_PATCH_VERTICES = 36466;
    int GL_PATCH_DEFAULT_INNER_LEVEL = 36467;
    int GL_PATCH_DEFAULT_OUTER_LEVEL = 36468;
    int GL_TESS_CONTROL_OUTPUT_VERTICES = 36469;
    int GL_TESS_GEN_MODE = 36470;
    int GL_TESS_GEN_SPACING = 36471;
    int GL_TESS_GEN_VERTEX_ORDER = 36472;
    int GL_TESS_GEN_POINT_MODE = 36473;
    int GL_ISOLINES = 36474;
    int GL_FRACTIONAL_ODD = 36475;
    int GL_FRACTIONAL_EVEN = 36476;
    int GL_MAX_PATCH_VERTICES = 36477;
    int GL_MAX_TESS_GEN_LEVEL = 36478;
    int GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 36479;
    int GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 36480;
    int GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 36481;
    int GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 36482;
    int GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 36483;
    int GL_MAX_TESS_PATCH_COMPONENTS = 36484;
    int GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 36485;
    int GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 36486;
    int GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 36489;
    int GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 36490;
    int GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 34924;
    int GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 34925;
    int GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 36382;
    int GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 36383;
    int GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 34032;
    int GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 34033;
    int GL_TESS_EVALUATION_SHADER = 36487;
    int GL_TESS_CONTROL_SHADER = 36488;
    int GL_TEXTURE_CUBE_MAP_ARRAY = 36873;
    int GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 36874;
    int GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 36875;
    int GL_SAMPLER_CUBE_MAP_ARRAY = 36876;
    int GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 36877;
    int GL_INT_SAMPLER_CUBE_MAP_ARRAY = 36878;
    int GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 36879;
    int GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 36446;
    int GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 36447;
    int GL_TRANSFORM_FEEDBACK = 36386;
    int GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 36387;
    int GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 36388;
    int GL_TRANSFORM_FEEDBACK_BINDING = 36389;
    int GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 36464;
    int GL_MAX_VERTEX_STREAMS = 36465;

    void glBlendEquationi(int buf, int mode);
    void glBlendEquationSeparatei(int buf, int modeRGB, int modeAlpha);
    void glBlendFunci(int buf, int sfactor, int dfactor);
    void glBlendFuncSeparatei(int buf, int srcRGB, int dstRGB, int srcAlpha, int dstAlpha);
    void nglDrawArraysIndirect(int mode, long indirect);
    void glDrawArraysIndirect(int mode, ByteBuffer indirect);
    void glDrawArraysIndirect(int mode, long indirect);
    void glDrawArraysIndirect(int mode, IntBuffer indirect);
    void nglDrawElementsIndirect(int mode, int type, long indirect);
    void glDrawElementsIndirect(int mode, int type, ByteBuffer indirect);
    void glDrawElementsIndirect(int mode, int type, long indirect);
    void glDrawElementsIndirect(int mode, int type, IntBuffer indirect);
    void glUniform1d(int location, double x);
    void glUniform2d(int location, double x, double y);
    void glUniform3d(int location, double x, double y, double z);
    void glUniform4d(int location, double x, double y, double z, double w);
    void nglUniform1dv(int location, int count, long value);
    void glUniform1dv(int location, DoubleBuffer value);
    void nglUniform2dv(int location, int count, long value);
    void glUniform2dv(int location, DoubleBuffer value);
    void nglUniform3dv(int location, int count, long value);
    void glUniform3dv(int location, DoubleBuffer value);
    void nglUniform4dv(int location, int count, long value);
    void glUniform4dv(int location, DoubleBuffer value);
    void nglUniformMatrix2dv(int location, int count, boolean transpose, long value);
    void glUniformMatrix2dv(int location, boolean transpose, DoubleBuffer value);
    void nglUniformMatrix3dv(int location, int count, boolean transpose, long value);
    void glUniformMatrix3dv(int location, boolean transpose, DoubleBuffer value);
    void nglUniformMatrix4dv(int location, int count, boolean transpose, long value);
    void glUniformMatrix4dv(int location, boolean transpose, DoubleBuffer value);
    void nglUniformMatrix2x3dv(int location, int count, boolean transpose, long value);
    void glUniformMatrix2x3dv(int location, boolean transpose, DoubleBuffer value);
    void nglUniformMatrix2x4dv(int location, int count, boolean transpose, long value);
    void glUniformMatrix2x4dv(int location, boolean transpose, DoubleBuffer value);
    void nglUniformMatrix3x2dv(int location, int count, boolean transpose, long value);
    void glUniformMatrix3x2dv(int location, boolean transpose, DoubleBuffer value);
    void nglUniformMatrix3x4dv(int location, int count, boolean transpose, long value);
    void glUniformMatrix3x4dv(int location, boolean transpose, DoubleBuffer value);
    void nglUniformMatrix4x2dv(int location, int count, boolean transpose, long value);
    void glUniformMatrix4x2dv(int location, boolean transpose, DoubleBuffer value);
    void nglUniformMatrix4x3dv(int location, int count, boolean transpose, long value);
    void glUniformMatrix4x3dv(int location, boolean transpose, DoubleBuffer value);
    void nglGetUniformdv(int program, int location, long params);
    void glGetUniformdv(int program, int location, DoubleBuffer params);
    double glGetUniformd(int program, int location);
    void glMinSampleShading(float value);
    int nglGetSubroutineUniformLocation(int program, int shadertype, long name);
    int glGetSubroutineUniformLocation(int program, int shadertype, ByteBuffer name);
    int glGetSubroutineUniformLocation(int program, int shadertype, CharSequence name);
    int nglGetSubroutineIndex(int program, int shadertype, long name);
    int glGetSubroutineIndex(int program, int shadertype, ByteBuffer name);
    int glGetSubroutineIndex(int program, int shadertype, CharSequence name);
    void nglGetActiveSubroutineUniformiv(int program, int shadertype, int index, int pname, long values);
    void glGetActiveSubroutineUniformiv(int program, int shadertype, int index, int pname, IntBuffer values);
    int glGetActiveSubroutineUniformi(int program, int shadertype, int index, int pname);
    void nglGetActiveSubroutineUniformName(int program, int shadertype, int index, int bufsize, long length, long name);
    void glGetActiveSubroutineUniformName(int program, int shadertype, int index, IntBuffer length, ByteBuffer name);
    String glGetActiveSubroutineUniformName(int program, int shadertype, int index, int bufsize);
    String glGetActiveSubroutineUniformName(int program, int shadertype, int index);
    void nglGetActiveSubroutineName(int program, int shadertype, int index, int bufsize, long length, long name);
    void glGetActiveSubroutineName(int program, int shadertype, int index, IntBuffer length, ByteBuffer name);
    String glGetActiveSubroutineName(int program, int shadertype, int index, int bufsize);
    String glGetActiveSubroutineName(int program, int shadertype, int index);
    void nglUniformSubroutinesuiv(int shadertype, int count, long indices);
    void glUniformSubroutinesuiv(int shadertype, IntBuffer indices);
    void glUniformSubroutinesui(int shadertype, int index);
    void nglGetUniformSubroutineuiv(int shadertype, int location, long params);
    void glGetUniformSubroutineuiv(int shadertype, int location, IntBuffer params);
    int glGetUniformSubroutineui(int shadertype, int location);
    void nglGetProgramStageiv(int program, int shadertype, int pname, long values);
    void glGetProgramStageiv(int program, int shadertype, int pname, IntBuffer values);
    int glGetProgramStagei(int program, int shadertype, int pname);
    void glPatchParameteri(int pname, int value);
    void nglPatchParameterfv(int pname, long values);
    void glPatchParameterfv(int pname, FloatBuffer values);
    void glBindTransformFeedback(int target, int id);
    void nglDeleteTransformFeedbacks(int n, long ids);
    void glDeleteTransformFeedbacks(IntBuffer ids);
    void glDeleteTransformFeedbacks(int id);
    void nglGenTransformFeedbacks(int n, long ids);
    void glGenTransformFeedbacks(IntBuffer ids);
    int glGenTransformFeedbacks();
    boolean glIsTransformFeedback(int id);
    void glPauseTransformFeedback();
    void glResumeTransformFeedback();
    void glDrawTransformFeedback(int mode, int id);
    void glDrawTransformFeedbackStream(int mode, int id, int stream);
    void glBeginQueryIndexed(int target, int index, int id);
    void glEndQueryIndexed(int target, int index);
    void nglGetQueryIndexediv(int target, int index, int pname, long params);
    void glGetQueryIndexediv(int target, int index, int pname, IntBuffer params);
    int glGetQueryIndexedi(int target, int index, int pname);
    void glDrawArraysIndirect(int mode, int[] indirect);
    void glDrawElementsIndirect(int mode, int type, int[] indirect);
    void glUniform1dv(int location, double[] value);
    void glUniform2dv(int location, double[] value);
    void glUniform3dv(int location, double[] value);
    void glUniform4dv(int location, double[] value);
    void glUniformMatrix2dv(int location, boolean transpose, double[] value);
    void glUniformMatrix3dv(int location, boolean transpose, double[] value);
    void glUniformMatrix4dv(int location, boolean transpose, double[] value);
    void glUniformMatrix2x3dv(int location, boolean transpose, double[] value);
    void glUniformMatrix2x4dv(int location, boolean transpose, double[] value);
    void glUniformMatrix3x2dv(int location, boolean transpose, double[] value);
    void glUniformMatrix3x4dv(int location, boolean transpose, double[] value);
    void glUniformMatrix4x2dv(int location, boolean transpose, double[] value);
    void glUniformMatrix4x3dv(int location, boolean transpose, double[] value);
    void glGetUniformdv(int program, int location, double[] params);
    void glGetActiveSubroutineUniformiv(int program, int shadertype, int index, int pname, int[] values);
    void glGetActiveSubroutineUniformName(int program, int shadertype, int index, int [] length, ByteBuffer name);
    void glGetActiveSubroutineName(int program, int shadertype, int index, int [] length, ByteBuffer name);
    void glUniformSubroutinesuiv(int shadertype, int[] indices);
    void glGetUniformSubroutineuiv(int shadertype, int location, int[] params);
    void glGetProgramStageiv(int program, int shadertype, int pname, int[] values);
    void glPatchParameterfv(int pname, float[] values);
    void glDeleteTransformFeedbacks(int[] ids);
    void glGenTransformFeedbacks(int[] ids);
    void glGetQueryIndexediv(int target, int index, int pname, int[] params);

}
