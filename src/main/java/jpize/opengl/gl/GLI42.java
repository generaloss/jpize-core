package jpize.opengl.gl;

import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import java.nio.ShortBuffer;

public interface GLI42 extends GLI41 {

    int GL_COPY_READ_BUFFER_BINDING = 36662;
    int GL_COPY_WRITE_BUFFER_BINDING = 36663;
    int GL_TRANSFORM_FEEDBACK_ACTIVE = 36388;
    int GL_TRANSFORM_FEEDBACK_PAUSED = 36387;
    int GL_COMPRESSED_RGBA_BPTC_UNORM = 36492;
    int GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 36493;
    int GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 36494;
    int GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 36495;
    int GL_UNPACK_COMPRESSED_BLOCK_WIDTH = 37159;
    int GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = 37160;
    int GL_UNPACK_COMPRESSED_BLOCK_DEPTH = 37161;
    int GL_UNPACK_COMPRESSED_BLOCK_SIZE = 37162;
    int GL_PACK_COMPRESSED_BLOCK_WIDTH = 37163;
    int GL_PACK_COMPRESSED_BLOCK_HEIGHT = 37164;
    int GL_PACK_COMPRESSED_BLOCK_DEPTH = 37165;
    int GL_PACK_COMPRESSED_BLOCK_SIZE = 37166;
    int GL_ATOMIC_COUNTER_BUFFER = 37568;
    int GL_ATOMIC_COUNTER_BUFFER_BINDING = 37569;
    int GL_ATOMIC_COUNTER_BUFFER_START = 37570;
    int GL_ATOMIC_COUNTER_BUFFER_SIZE = 37571;
    int GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = 37572;
    int GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 37573;
    int GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 37574;
    int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 37575;
    int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 37576;
    int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 37577;
    int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 37578;
    int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 37579;
    int GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 37580;
    int GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 37581;
    int GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 37582;
    int GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 37583;
    int GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 37584;
    int GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 37585;
    int GL_MAX_VERTEX_ATOMIC_COUNTERS = 37586;
    int GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = 37587;
    int GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 37588;
    int GL_MAX_GEOMETRY_ATOMIC_COUNTERS = 37589;
    int GL_MAX_FRAGMENT_ATOMIC_COUNTERS = 37590;
    int GL_MAX_COMBINED_ATOMIC_COUNTERS = 37591;
    int GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = 37592;
    int GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 37596;
    int GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = 37593;
    int GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 37594;
    int GL_UNSIGNED_INT_ATOMIC_COUNTER = 37595;
    int GL_TEXTURE_IMMUTABLE_FORMAT = 37167;
    int GL_MAX_IMAGE_UNITS = 36664;
    int GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 36665;
    int GL_MAX_IMAGE_SAMPLES = 36973;
    int GL_MAX_VERTEX_IMAGE_UNIFORMS = 37066;
    int GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = 37067;
    int GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 37068;
    int GL_MAX_GEOMETRY_IMAGE_UNIFORMS = 37069;
    int GL_MAX_FRAGMENT_IMAGE_UNIFORMS = 37070;
    int GL_MAX_COMBINED_IMAGE_UNIFORMS = 37071;
    int GL_IMAGE_BINDING_NAME = 36666;
    int GL_IMAGE_BINDING_LEVEL = 36667;
    int GL_IMAGE_BINDING_LAYERED = 36668;
    int GL_IMAGE_BINDING_LAYER = 36669;
    int GL_IMAGE_BINDING_ACCESS = 36670;
    int GL_IMAGE_BINDING_FORMAT = 36974;
    int GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 1;
    int GL_ELEMENT_ARRAY_BARRIER_BIT = 2;
    int GL_UNIFORM_BARRIER_BIT = 4;
    int GL_TEXTURE_FETCH_BARRIER_BIT = 8;
    int GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = 32;
    int GL_COMMAND_BARRIER_BIT = 64;
    int GL_PIXEL_BUFFER_BARRIER_BIT = 128;
    int GL_TEXTURE_UPDATE_BARRIER_BIT = 256;
    int GL_BUFFER_UPDATE_BARRIER_BIT = 512;
    int GL_FRAMEBUFFER_BARRIER_BIT = 1024;
    int GL_TRANSFORM_FEEDBACK_BARRIER_BIT = 2048;
    int GL_ATOMIC_COUNTER_BARRIER_BIT = 4096;
    int GL_ALL_BARRIER_BITS = -1;
    int GL_IMAGE_1D = 36940;
    int GL_IMAGE_2D = 36941;
    int GL_IMAGE_3D = 36942;
    int GL_IMAGE_2D_RECT = 36943;
    int GL_IMAGE_CUBE = 36944;
    int GL_IMAGE_BUFFER = 36945;
    int GL_IMAGE_1D_ARRAY = 36946;
    int GL_IMAGE_2D_ARRAY = 36947;
    int GL_IMAGE_CUBE_MAP_ARRAY = 36948;
    int GL_IMAGE_2D_MULTISAMPLE = 36949;
    int GL_IMAGE_2D_MULTISAMPLE_ARRAY = 36950;
    int GL_INT_IMAGE_1D = 36951;
    int GL_INT_IMAGE_2D = 36952;
    int GL_INT_IMAGE_3D = 36953;
    int GL_INT_IMAGE_2D_RECT = 36954;
    int GL_INT_IMAGE_CUBE = 36955;
    int GL_INT_IMAGE_BUFFER = 36956;
    int GL_INT_IMAGE_1D_ARRAY = 36957;
    int GL_INT_IMAGE_2D_ARRAY = 36958;
    int GL_INT_IMAGE_CUBE_MAP_ARRAY = 36959;
    int GL_INT_IMAGE_2D_MULTISAMPLE = 36960;
    int GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 36961;
    int GL_UNSIGNED_INT_IMAGE_1D = 36962;
    int GL_UNSIGNED_INT_IMAGE_2D = 36963;
    int GL_UNSIGNED_INT_IMAGE_3D = 36964;
    int GL_UNSIGNED_INT_IMAGE_2D_RECT = 36965;
    int GL_UNSIGNED_INT_IMAGE_CUBE = 36966;
    int GL_UNSIGNED_INT_IMAGE_BUFFER = 36967;
    int GL_UNSIGNED_INT_IMAGE_1D_ARRAY = 36968;
    int GL_UNSIGNED_INT_IMAGE_2D_ARRAY = 36969;
    int GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 36970;
    int GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 36971;
    int GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 36972;
    int GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = 37063;
    int GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 37064;
    int GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 37065;
    int GL_NUM_SAMPLE_COUNTS = 37760;
    int GL_MIN_MAP_BUFFER_ALIGNMENT = 37052;

    void glGetActiveAtomicCounterBufferiv(int program, int bufferIndex, int pname, IntBuffer params);
    int glGetActiveAtomicCounterBufferi(int program, int bufferIndex, int pname);
    void glTexStorage1D(int target, int levels, int internalformat, int width);
    void glTexStorage2D(int target, int levels, int internalformat, int width, int height);
    void glTexStorage3D(int target, int levels, int internalformat, int width, int height, int depth);
    void glDrawTransformFeedbackInstanced(int mode, int id, int primcount);
    void glDrawTransformFeedbackStreamInstanced(int mode, int id, int stream, int primcount);
    void glDrawArraysInstancedBaseInstance(int mode, int first, int count, int primcount, int baseinstance);
    void glDrawElementsInstancedBaseInstance(int mode, int count, int type, long indices, int primcount, int baseinstance);
    void glDrawElementsInstancedBaseInstance(int mode, int type, ByteBuffer indices, int primcount, int baseinstance);
    void glDrawElementsInstancedBaseInstance(int mode, ByteBuffer indices, int primcount, int baseinstance);
    void glDrawElementsInstancedBaseInstance(int mode, ShortBuffer indices, int primcount, int baseinstance);
    void glDrawElementsInstancedBaseInstance(int mode, IntBuffer indices, int primcount, int baseinstance);
    void glDrawElementsInstancedBaseVertexBaseInstance(int mode, int count, int type, long indices, int primcount, int basevertex, int baseinstance);
    void glDrawElementsInstancedBaseVertexBaseInstance(int mode, int type, ByteBuffer indices, int primcount, int basevertex, int baseinstance);
    void glDrawElementsInstancedBaseVertexBaseInstance(int mode, ByteBuffer indices, int primcount, int basevertex, int baseinstance);
    void glDrawElementsInstancedBaseVertexBaseInstance(int mode, ShortBuffer indices, int primcount, int basevertex, int baseinstance);
    void glDrawElementsInstancedBaseVertexBaseInstance(int mode, IntBuffer indices, int primcount, int basevertex, int baseinstance);
    void glBindImageTexture(int unit, int texture, int level, boolean layered, int layer, int access, int format);
    void glMemoryBarrier(int barriers);
    void glGetInternalformativ(int target, int internalformat, int pname, IntBuffer params);
    int glGetInternalformati(int target, int internalformat, int pname);
    void glGetActiveAtomicCounterBufferiv(int program, int bufferIndex, int pname, int[] params);
    void glGetInternalformativ(int target, int internalformat, int pname, int[] params);

}
