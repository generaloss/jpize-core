package jpize.opengl.gl;

import java.nio.ByteBuffer;
import java.nio.DoubleBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;

public interface GLI41 extends GLI40 {

    int GL_SHADER_COMPILER = 36346;
    int GL_SHADER_BINARY_FORMATS = 36344;
    int GL_NUM_SHADER_BINARY_FORMATS = 36345;
    int GL_MAX_VERTEX_UNIFORM_VECTORS = 36347;
    int GL_MAX_VARYING_VECTORS = 36348;
    int GL_MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
    int GL_IMPLEMENTATION_COLOR_READ_TYPE = 35738;
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT = 35739;
    int GL_FIXED = 5132;
    int GL_LOW_FLOAT = 36336;
    int GL_MEDIUM_FLOAT = 36337;
    int GL_HIGH_FLOAT = 36338;
    int GL_LOW_INT = 36339;
    int GL_MEDIUM_INT = 36340;
    int GL_HIGH_INT = 36341;
    int GL_RGB565 = 36194;
    int GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 33367;
    int GL_PROGRAM_BINARY_LENGTH = 34625;
    int GL_NUM_PROGRAM_BINARY_FORMATS = 34814;
    int GL_PROGRAM_BINARY_FORMATS = 34815;
    int GL_VERTEX_SHADER_BIT = 1;
    int GL_FRAGMENT_SHADER_BIT = 2;
    int GL_GEOMETRY_SHADER_BIT = 4;
    int GL_TESS_CONTROL_SHADER_BIT = 8;
    int GL_TESS_EVALUATION_SHADER_BIT = 16;
    int GL_ALL_SHADER_BITS = -1;
    int GL_PROGRAM_SEPARABLE = 33368;
    int GL_ACTIVE_PROGRAM = 33369;
    int GL_PROGRAM_PIPELINE_BINDING = 33370;
    int GL_MAX_VIEWPORTS = 33371;
    int GL_VIEWPORT_SUBPIXEL_BITS = 33372;
    int GL_VIEWPORT_BOUNDS_RANGE = 33373;
    int GL_LAYER_PROVOKING_VERTEX = 33374;
    int GL_VIEWPORT_INDEX_PROVOKING_VERTEX = 33375;
    int GL_UNDEFINED_VERTEX = 33376;

    void glReleaseShaderCompiler();
    void glShaderBinary(IntBuffer shaders, int binaryformat, ByteBuffer binary);
    void glGetShaderPrecisionFormat(int shadertype, int precisiontype, IntBuffer range, IntBuffer precision);
    int glGetShaderPrecisionFormat(int shadertype, int precisiontype, IntBuffer range);
    void glDepthRangef(float zNear, float zFar);
    void glClearDepthf(float depth);
    void glGetProgramBinary(int program, IntBuffer length, IntBuffer binaryFormat, ByteBuffer binary);
    void glProgramBinary(int program, int binaryFormat, ByteBuffer binary);
    void glProgramParameteri(int program, int pname, int value);
    void glUseProgramStages(int pipeline, int stages, int program);
    void glActiveShaderProgram(int pipeline, int program);
    // int glCreateShaderProgramv(int type, PointerBuffer strings);
    int glCreateShaderProgramv(int type, CharSequence... strings);
    int glCreateShaderProgramv(int type, CharSequence string);
    void glBindProgramPipeline(int pipeline);
    void glDeleteProgramPipelines(IntBuffer pipelines);
    void glDeleteProgramPipelines(int pipeline);
    void glGenProgramPipelines(IntBuffer pipelines);
    int glGenProgramPipelines();
    boolean glIsProgramPipeline(int pipeline);
    void glGetProgramPipelineiv(int pipeline, int pname, IntBuffer params);
    int glGetProgramPipelinei(int pipeline, int pname);
    void glProgramUniform1i(int program, int location, int x);
    void glProgramUniform2i(int program, int location, int x, int y);
    void glProgramUniform3i(int program, int location, int x, int y, int z);
    void glProgramUniform4i(int program, int location, int x, int y, int z, int w);
    void glProgramUniform1ui(int program, int location, int x);
    void glProgramUniform2ui(int program, int location, int x, int y);
    void glProgramUniform3ui(int program, int location, int x, int y, int z);
    void glProgramUniform4ui(int program, int location, int x, int y, int z, int w);
    void glProgramUniform1f(int program, int location, float x);
    void glProgramUniform2f(int program, int location, float x, float y);
    void glProgramUniform3f(int program, int location, float x, float y, float z);
    void glProgramUniform4f(int program, int location, float x, float y, float z, float w);
    void glProgramUniform1d(int program, int location, double x);
    void glProgramUniform2d(int program, int location, double x, double y);
    void glProgramUniform3d(int program, int location, double x, double y, double z);
    void glProgramUniform4d(int program, int location, double x, double y, double z, double w);
    void glProgramUniform1iv(int program, int location, IntBuffer value);
    void glProgramUniform2iv(int program, int location, IntBuffer value);
    void glProgramUniform3iv(int program, int location, IntBuffer value);
    void glProgramUniform4iv(int program, int location, IntBuffer value);
    void glProgramUniform1uiv(int program, int location, IntBuffer value);
    void glProgramUniform2uiv(int program, int location, IntBuffer value);
    void glProgramUniform3uiv(int program, int location, IntBuffer value);
    void glProgramUniform4uiv(int program, int location, IntBuffer value);
    void glProgramUniform1fv(int program, int location, FloatBuffer value);
    void glProgramUniform2fv(int program, int location, FloatBuffer value);
    void glProgramUniform3fv(int program, int location, FloatBuffer value);
    void glProgramUniform4fv(int program, int location, FloatBuffer value);
    void glProgramUniform1dv(int program, int location, DoubleBuffer value);
    void glProgramUniform2dv(int program, int location, DoubleBuffer value);
    void glProgramUniform3dv(int program, int location, DoubleBuffer value);
    void glProgramUniform4dv(int program, int location, DoubleBuffer value);
    void glProgramUniformMatrix2fv(int program, int location, boolean transpose, FloatBuffer value);
    void glProgramUniformMatrix3fv(int program, int location, boolean transpose, FloatBuffer value);
    void glProgramUniformMatrix4fv(int program, int location, boolean transpose, FloatBuffer value);
    void glProgramUniformMatrix2dv(int program, int location, boolean transpose, DoubleBuffer value);
    void glProgramUniformMatrix3dv(int program, int location, boolean transpose, DoubleBuffer value);
    void glProgramUniformMatrix4dv(int program, int location, boolean transpose, DoubleBuffer value);
    void glProgramUniformMatrix2x3fv(int program, int location, boolean transpose, FloatBuffer value);
    void glProgramUniformMatrix3x2fv(int program, int location, boolean transpose, FloatBuffer value);
    void glProgramUniformMatrix2x4fv(int program, int location, boolean transpose, FloatBuffer value);
    void glProgramUniformMatrix4x2fv(int program, int location, boolean transpose, FloatBuffer value);
    void glProgramUniformMatrix3x4fv(int program, int location, boolean transpose, FloatBuffer value);
    void glProgramUniformMatrix4x3fv(int program, int location, boolean transpose, FloatBuffer value);
    void glProgramUniformMatrix2x3dv(int program, int location, boolean transpose, DoubleBuffer value);
    void glProgramUniformMatrix3x2dv(int program, int location, boolean transpose, DoubleBuffer value);
    void glProgramUniformMatrix2x4dv(int program, int location, boolean transpose, DoubleBuffer value);
    void glProgramUniformMatrix4x2dv(int program, int location, boolean transpose, DoubleBuffer value);
    void glProgramUniformMatrix3x4dv(int program, int location, boolean transpose, DoubleBuffer value);
    void glProgramUniformMatrix4x3dv(int program, int location, boolean transpose, DoubleBuffer value);
    void glValidateProgramPipeline(int pipeline);
    void glGetProgramPipelineInfoLog(int pipeline, IntBuffer length, ByteBuffer infoLog);
    String glGetProgramPipelineInfoLog(int pipeline, int bufSize);
    String glGetProgramPipelineInfoLog(int pipeline);
    void glVertexAttribL1d(int index, double x);
    void glVertexAttribL2d(int index, double x, double y);
    void glVertexAttribL3d(int index, double x, double y, double z);
    void glVertexAttribL4d(int index, double x, double y, double z, double w);
    void glVertexAttribL1dv(int index, DoubleBuffer v);
    void glVertexAttribL2dv(int index, DoubleBuffer v);
    void glVertexAttribL3dv(int index, DoubleBuffer v);
    void glVertexAttribL4dv(int index, DoubleBuffer v);
    void glVertexAttribLPointer(int index, int size, int type, int stride, ByteBuffer pointer);
    void glVertexAttribLPointer(int index, int size, int type, int stride, long pointer);
    void glVertexAttribLPointer(int index, int size, int stride, DoubleBuffer pointer);
    void glGetVertexAttribLdv(int index, int pname, DoubleBuffer params);
    void glViewportArrayv(int first, FloatBuffer v);
    void glViewportIndexedf(int index, float x, float y, float w, float h);
    void glViewportIndexedfv(int index, FloatBuffer v);
    void glScissorArrayv(int first, IntBuffer v);
    void glScissorIndexed(int index, int left, int bottom, int width, int height);
    void glScissorIndexedv(int index, IntBuffer v);
    void glDepthRangeArrayv(int first, DoubleBuffer v);
    void glDepthRangeIndexed(int index, double zNear, double zFar);
    void glGetFloati_v(int target, int index, FloatBuffer data);
    float glGetFloati(int target, int index);
    void glGetDoublei_v(int target, int index, DoubleBuffer data);
    double glGetDoublei(int target, int index);
    void glShaderBinary(int[] shaders, int binaryformat, ByteBuffer binary);
    void glGetShaderPrecisionFormat(int shadertype, int precisiontype, int[] range, int[] precision);
    void glGetProgramBinary(int program, int[] length, int[] binaryFormat, ByteBuffer binary);
    void glDeleteProgramPipelines(int[] pipelines);
    void glGenProgramPipelines(int[] pipelines);
    void glGetProgramPipelineiv(int pipeline, int pname, int[] params);
    void glProgramUniform1iv(int program, int location, int[] value);
    void glProgramUniform2iv(int program, int location, int[] value);
    void glProgramUniform3iv(int program, int location, int[] value);
    void glProgramUniform4iv(int program, int location, int[] value);
    void glProgramUniform1uiv(int program, int location, int[] value);
    void glProgramUniform2uiv(int program, int location, int[] value);
    void glProgramUniform3uiv(int program, int location, int[] value);
    void glProgramUniform4uiv(int program, int location, int[] value);
    void glProgramUniform1fv(int program, int location, float[] value);
    void glProgramUniform2fv(int program, int location, float[] value);
    void glProgramUniform3fv(int program, int location, float[] value);
    void glProgramUniform4fv(int program, int location, float[] value);
    void glProgramUniform1dv(int program, int location, double[] value);
    void glProgramUniform2dv(int program, int location, double[] value);
    void glProgramUniform3dv(int program, int location, double[] value);
    void glProgramUniform4dv(int program, int location, double[] value);
    void glProgramUniformMatrix2fv(int program, int location, boolean transpose, float[] value);
    void glProgramUniformMatrix3fv(int program, int location, boolean transpose, float[] value);
    void glProgramUniformMatrix4fv(int program, int location, boolean transpose, float[] value);
    void glProgramUniformMatrix2dv(int program, int location, boolean transpose, double[] value);
    void glProgramUniformMatrix3dv(int program, int location, boolean transpose, double[] value);
    void glProgramUniformMatrix4dv(int program, int location, boolean transpose, double[] value);
    void glProgramUniformMatrix2x3fv(int program, int location, boolean transpose, float[] value);
    void glProgramUniformMatrix3x2fv(int program, int location, boolean transpose, float[] value);
    void glProgramUniformMatrix2x4fv(int program, int location, boolean transpose, float[] value);
    void glProgramUniformMatrix4x2fv(int program, int location, boolean transpose, float[] value);
    void glProgramUniformMatrix3x4fv(int program, int location, boolean transpose, float[] value);
    void glProgramUniformMatrix4x3fv(int program, int location, boolean transpose, float[] value);
    void glProgramUniformMatrix2x3dv(int program, int location, boolean transpose, double[] value);
    void glProgramUniformMatrix3x2dv(int program, int location, boolean transpose, double[] value);
    void glProgramUniformMatrix2x4dv(int program, int location, boolean transpose, double[] value);
    void glProgramUniformMatrix4x2dv(int program, int location, boolean transpose, double[] value);
    void glProgramUniformMatrix3x4dv(int program, int location, boolean transpose, double[] value);
    void glProgramUniformMatrix4x3dv(int program, int location, boolean transpose, double[] value);
    void glGetProgramPipelineInfoLog(int pipeline, int[] length, ByteBuffer infoLog);
    void glVertexAttribL1dv(int index, double[] v);
    void glVertexAttribL2dv(int index, double[] v);
    void glVertexAttribL3dv(int index, double[] v);
    void glVertexAttribL4dv(int index, double[] v);
    void glGetVertexAttribLdv(int index, int pname, double[] params);
    void glViewportArrayv(int first, float[] v);
    void glViewportIndexedfv(int index, float[] v);
    void glScissorArrayv(int first, int[] v);
    void glScissorIndexedv(int index, int[] v);
    void glDepthRangeArrayv(int first, double[] v);
    void glGetFloati_v(int target, int index, float[] data);
    void glGetDoublei_v(int target, int index, double[] data);

}
