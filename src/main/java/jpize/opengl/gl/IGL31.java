package jpize.opengl.gl;

import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import java.nio.ShortBuffer;

public interface IGL31 extends IGL30 {

    int GL_R8_SNORM = 36756;
    int GL_RG8_SNORM = 36757;
    int GL_RGB8_SNORM = 36758;
    int GL_RGBA8_SNORM = 36759;
    int GL_R16_SNORM = 36760;
    int GL_RG16_SNORM = 36761;
    int GL_RGB16_SNORM = 36762;
    int GL_RGBA16_SNORM = 36763;
    int GL_SIGNED_NORMALIZED = 36764;
    int GL_SAMPLER_BUFFER = 36290;
    int GL_INT_SAMPLER_2D_RECT = 36301;
    int GL_INT_SAMPLER_BUFFER = 36304;
    int GL_UNSIGNED_INT_SAMPLER_2D_RECT = 36309;
    int GL_UNSIGNED_INT_SAMPLER_BUFFER = 36312;
    int GL_COPY_READ_BUFFER = 36662;
    int GL_COPY_WRITE_BUFFER = 36663;
    int GL_PRIMITIVE_RESTART = 36765;
    int GL_PRIMITIVE_RESTART_INDEX = 36766;
    int GL_TEXTURE_BUFFER = 35882;
    int GL_MAX_TEXTURE_BUFFER_SIZE = 35883;
    int GL_TEXTURE_BINDING_BUFFER = 35884;
    int GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 35885;
    int GL_TEXTURE_RECTANGLE = 34037;
    int GL_TEXTURE_BINDING_RECTANGLE = 34038;
    int GL_PROXY_TEXTURE_RECTANGLE = 34039;
    int GL_MAX_RECTANGLE_TEXTURE_SIZE = 34040;
    int GL_SAMPLER_2D_RECT = 35683;
    int GL_SAMPLER_2D_RECT_SHADOW = 35684;
    int GL_UNIFORM_BUFFER = 35345;
    int GL_UNIFORM_BUFFER_BINDING = 35368;
    int GL_UNIFORM_BUFFER_START = 35369;
    int GL_UNIFORM_BUFFER_SIZE = 35370;
    int GL_MAX_VERTEX_UNIFORM_BLOCKS = 35371;
    int GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 35372;
    int GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 35373;
    int GL_MAX_COMBINED_UNIFORM_BLOCKS = 35374;
    int GL_MAX_UNIFORM_BUFFER_BINDINGS = 35375;
    int GL_MAX_UNIFORM_BLOCK_SIZE = 35376;
    int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 35377;
    int GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 35378;
    int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 35379;
    int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 35380;
    int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 35381;
    int GL_ACTIVE_UNIFORM_BLOCKS = 35382;
    int GL_UNIFORM_TYPE = 35383;
    int GL_UNIFORM_SIZE = 35384;
    int GL_UNIFORM_NAME_LENGTH = 35385;
    int GL_UNIFORM_BLOCK_INDEX = 35386;
    int GL_UNIFORM_OFFSET = 35387;
    int GL_UNIFORM_ARRAY_STRIDE = 35388;
    int GL_UNIFORM_MATRIX_STRIDE = 35389;
    int GL_UNIFORM_IS_ROW_MAJOR = 35390;
    int GL_UNIFORM_BLOCK_BINDING = 35391;
    int GL_UNIFORM_BLOCK_DATA_SIZE = 35392;
    int GL_UNIFORM_BLOCK_NAME_LENGTH = 35393;
    int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 35394;
    int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 35395;
    int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 35396;
    int GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 35397;
    int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 35398;
    int GL_INVALID_INDEX = -1;

    void glDrawArraysInstanced(int mode, int first, int count, int primcount);
    void nglDrawElementsInstanced(int mode, int count, int type, long indices, int primcount);
    void glDrawElementsInstanced(int mode, int count, int type, long indices, int primcount);
    void glDrawElementsInstanced(int mode, int type, ByteBuffer indices, int primcount);
    void glDrawElementsInstanced(int mode, ByteBuffer indices, int primcount);
    void glDrawElementsInstanced(int mode, ShortBuffer indices, int primcount);
    void glDrawElementsInstanced(int mode, IntBuffer indices, int primcount);
    void glCopyBufferSubData(int readTarget, int writeTarget, long readOffset, long writeOffset, long size);
    void glPrimitiveRestartIndex(int index);
    void glTexBuffer(int target, int internalformat, int buffer);
    void nglGetUniformIndices(int program, int uniformCount, long uniformNames, long uniformIndices);
    // void glGetUniformIndices(int program, PointerBuffer uniformNames, IntBuffer uniformIndices);
    void glGetUniformIndices(int program, CharSequence[] uniformNames, IntBuffer uniformIndices);
    int glGetUniformIndices(int program, CharSequence uniformName);
    void nglGetActiveUniformsiv(int program, int uniformCount, long uniformIndices, int pname, long params);
    void glGetActiveUniformsiv(int program, IntBuffer uniformIndices, int pname, IntBuffer params);
    int glGetActiveUniformsi(int program, int uniformIndex, int pname);
    void nglGetActiveUniformName(int program, int uniformIndex, int bufSize, long length, long uniformName);
    void glGetActiveUniformName(int program, int uniformIndex, IntBuffer length, ByteBuffer uniformName);
    String glGetActiveUniformName(int program, int uniformIndex, int bufSize);
    String glGetActiveUniformName(int program, int uniformIndex);
    int nglGetUniformBlockIndex(int program, long uniformBlockName);
    int glGetUniformBlockIndex(int program, ByteBuffer uniformBlockName);
    int glGetUniformBlockIndex(int program, CharSequence uniformBlockName);
    void nglGetActiveUniformBlockiv(int program, int uniformBlockIndex, int pname, long params);
    void glGetActiveUniformBlockiv(int program, int uniformBlockIndex, int pname, IntBuffer params);
    int glGetActiveUniformBlocki(int program, int uniformBlockIndex, int pname);
    void nglGetActiveUniformBlockName(int program, int uniformBlockIndex, int bufSize, long length, long uniformBlockName);
    void glGetActiveUniformBlockName(int program, int uniformBlockIndex, IntBuffer length, ByteBuffer uniformBlockName);
    String glGetActiveUniformBlockName(int program, int uniformBlockIndex, int bufSize);
    String glGetActiveUniformBlockName(int program, int uniformBlockIndex);
    void glUniformBlockBinding(int program, int uniformBlockIndex, int uniformBlockBinding);
    // void glGetUniformIndices(int program, PointerBuffer uniformNames, int[] uniformIndices);
    void glGetActiveUniformsiv(int program, int[] uniformIndices, int pname, int[] params);
    void glGetActiveUniformName(int program, int uniformIndex, int[] length, ByteBuffer uniformName);
    void glGetActiveUniformBlockiv(int program, int uniformBlockIndex, int pname, int[] params);
    void glGetActiveUniformBlockName(int program, int uniformBlockIndex, int[] length, ByteBuffer uniformBlockName);

}