package jpize.opengl.gl;

import java.nio.*;

public interface GL20I extends GL15I {

    int GL_SHADING_LANGUAGE_VERSION = 35724;
    int GL_CURRENT_PROGRAM = 35725;
    int GL_SHADER_TYPE = 35663;
    int GL_DELETE_STATUS = 35712;
    int GL_COMPILE_STATUS = 35713;
    int GL_LINK_STATUS = 35714;
    int GL_VALIDATE_STATUS = 35715;
    int GL_INFO_LOG_LENGTH = 35716;
    int GL_ATTACHED_SHADERS = 35717;
    int GL_ACTIVE_UNIFORMS = 35718;
    int GL_ACTIVE_UNIFORM_MAX_LENGTH = 35719;
    int GL_ACTIVE_ATTRIBUTES = 35721;
    int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 35722;
    int GL_SHADER_SOURCE_LENGTH = 35720;
    int GL_FLOAT_VEC2 = 35664;
    int GL_FLOAT_VEC3 = 35665;
    int GL_FLOAT_VEC4 = 35666;
    int GL_INT_VEC2 = 35667;
    int GL_INT_VEC3 = 35668;
    int GL_INT_VEC4 = 35669;
    int GL_BOOL = 35670;
    int GL_BOOL_VEC2 = 35671;
    int GL_BOOL_VEC3 = 35672;
    int GL_BOOL_VEC4 = 35673;
    int GL_FLOAT_MAT2 = 35674;
    int GL_FLOAT_MAT3 = 35675;
    int GL_FLOAT_MAT4 = 35676;
    int GL_SAMPLER_1D = 35677;
    int GL_SAMPLER_2D = 35678;
    int GL_SAMPLER_3D = 35679;
    int GL_SAMPLER_CUBE = 35680;
    int GL_SAMPLER_1D_SHADOW = 35681;
    int GL_SAMPLER_2D_SHADOW = 35682;
    int GL_VERTEX_SHADER = 35633;
    int GL_MAX_VERTEX_UNIFORM_COMPONENTS = 35658;
    int GL_MAX_VARYING_FLOATS = 35659;
    int GL_MAX_VERTEX_ATTRIBS = 34921;
    int GL_MAX_TEXTURE_IMAGE_UNITS = 34930;
    int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
    int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
    int GL_MAX_TEXTURE_COORDS = 34929;
    int GL_VERTEX_PROGRAM_POINT_SIZE = 34370;
    int GL_VERTEX_PROGRAM_TWO_SIDE = 34371;
    int GL_VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
    int GL_VERTEX_ATTRIB_ARRAY_SIZE = 34339;
    int GL_VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
    int GL_VERTEX_ATTRIB_ARRAY_TYPE = 34341;
    int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
    int GL_CURRENT_VERTEX_ATTRIB = 34342;
    int GL_VERTEX_ATTRIB_ARRAY_POINTER = 34373;
    int GL_FRAGMENT_SHADER = 35632;
    int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 35657;
    int GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 35723;
    int GL_MAX_DRAW_BUFFERS = 34852;
    int GL_DRAW_BUFFER0 = 34853;
    int GL_DRAW_BUFFER1 = 34854;
    int GL_DRAW_BUFFER2 = 34855;
    int GL_DRAW_BUFFER3 = 34856;
    int GL_DRAW_BUFFER4 = 34857;
    int GL_DRAW_BUFFER5 = 34858;
    int GL_DRAW_BUFFER6 = 34859;
    int GL_DRAW_BUFFER7 = 34860;
    int GL_DRAW_BUFFER8 = 34861;
    int GL_DRAW_BUFFER9 = 34862;
    int GL_DRAW_BUFFER10 = 34863;
    int GL_DRAW_BUFFER11 = 34864;
    int GL_DRAW_BUFFER12 = 34865;
    int GL_DRAW_BUFFER13 = 34866;
    int GL_DRAW_BUFFER14 = 34867;
    int GL_DRAW_BUFFER15 = 34868;
    int GL_POINT_SPRITE = 34913;
    int GL_COORD_REPLACE = 34914;
    int GL_POINT_SPRITE_COORD_ORIGIN = 36000;
    int GL_LOWER_LEFT = 36001;
    int GL_UPPER_LEFT = 36002;
    int GL_BLEND_EQUATION_RGB = 32777;
    int GL_BLEND_EQUATION_ALPHA = 34877;
    int GL_STENCIL_BACK_FUNC = 34816;
    int GL_STENCIL_BACK_FAIL = 34817;
    int GL_STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
    int GL_STENCIL_BACK_PASS_DEPTH_PASS = 34819;
    int GL_STENCIL_BACK_REF = 36003;
    int GL_STENCIL_BACK_VALUE_MASK = 36004;
    int GL_STENCIL_BACK_WRITEMASK = 36005;

    int glCreateProgram();
    void glDeleteProgram(int program);
    boolean glIsProgram(int program);
    int glCreateShader(int type);
    void glDeleteShader(int shader);
    boolean glIsShader(int shader);
    void glAttachShader(int program, int shader);
    void glDetachShader(int program, int shader);
    // void glShaderSource(int shader, PointerBuffer strings, IntBuffer length);
    void glShaderSource(int shader, CharSequence... strings);
    void glShaderSource(int shader, CharSequence string);
    void glCompileShader(int shader);
    void glLinkProgram(int program);
    void glUseProgram(int program);
    void glValidateProgram(int program);
    void glUniform1f(int location, float v0);
    void glUniform2f(int location, float v0, float v1);
    void glUniform3f(int location, float v0, float v1, float v2);
    void glUniform4f(int location, float v0, float v1, float v2, float v3);
    void glUniform1i(int location, int v0);
    void glUniform2i(int location, int v0, int v1);
    void glUniform3i(int location, int v0, int v1, int v2);
    void glUniform4i(int location, int v0, int v1, int v2, int v3);
    void glUniform1fv(int location, FloatBuffer value);
    void glUniform2fv(int location, FloatBuffer value);
    void glUniform3fv(int location, FloatBuffer value);
    void glUniform4fv(int location, FloatBuffer value);
    void glUniform1iv(int location, IntBuffer value);
    void glUniform2iv(int location, IntBuffer value);
    void glUniform3iv(int location, IntBuffer value);
    void glUniform4iv(int location, IntBuffer value);
    void glUniformMatrix2fv(int location, boolean transpose, FloatBuffer value);
    void glUniformMatrix3fv(int location, boolean transpose, FloatBuffer value);
    void glUniformMatrix4fv(int location, boolean transpose, FloatBuffer value);
    void glGetShaderiv(int shader, int pname, IntBuffer params);
    int glGetShaderi(int shader, int pname);
    void glGetProgramiv(int program, int pname, IntBuffer params);
    int glGetProgrami(int program, int pname);
    void glGetShaderInfoLog(int shader, IntBuffer length, ByteBuffer infoLog);
    String glGetShaderInfoLog(int shader, int maxLength);
    String glGetShaderInfoLog(int shader);
    void glGetProgramInfoLog(int program, IntBuffer length, ByteBuffer infoLog);
    String glGetProgramInfoLog(int program, int maxLength);
    String glGetProgramInfoLog(int program);
    void glGetAttachedShaders(int program, IntBuffer count, IntBuffer shaders);
    int glGetUniformLocation(int program, ByteBuffer name);
    int glGetUniformLocation(int program, CharSequence name);
    void glGetActiveUniform(int program, int index, IntBuffer length, IntBuffer size, IntBuffer type, ByteBuffer name);
    String glGetActiveUniform(int program, int index, int maxLength, IntBuffer size, IntBuffer type);
    String glGetActiveUniform(int program, int index, IntBuffer size, IntBuffer type);
    void glGetUniformfv(int program, int location, FloatBuffer params);
    float glGetUniformf(int program, int location);
    void glGetUniformiv(int program, int location, IntBuffer params);
    int glGetUniformi(int program, int location);
    void glGetShaderSource(int shader, IntBuffer length, ByteBuffer source);
    String glGetShaderSource(int shader, int maxLength);
    String glGetShaderSource(int shader);
    void glVertexAttrib1f(int index, float v0);
    void glVertexAttrib1s(int index, short v0);
    void glVertexAttrib1d(int index, double v0);
    void glVertexAttrib2f(int index, float v0, float v1);
    void glVertexAttrib2s(int index, short v0, short v1);
    void glVertexAttrib2d(int index, double v0, double v1);
    void glVertexAttrib3f(int index, float v0, float v1, float v2);
    void glVertexAttrib3s(int index, short v0, short v1, short v2);
    void glVertexAttrib3d(int index, double v0, double v1, double v2);
    void glVertexAttrib4f(int index, float v0, float v1, float v2, float v3);
    void glVertexAttrib4s(int index, short v0, short v1, short v2, short v3);
    void glVertexAttrib4d(int index, double v0, double v1, double v2, double v3);
    void glVertexAttrib4Nub(int index, byte x, byte y, byte z, byte w);
    void glVertexAttrib1fv(int index, FloatBuffer v);
    void glVertexAttrib1sv(int index, ShortBuffer v);
    void glVertexAttrib1dv(int index, DoubleBuffer v);
    void glVertexAttrib2fv(int index, FloatBuffer v);
    void glVertexAttrib2sv(int index, ShortBuffer v);
    void glVertexAttrib2dv(int index, DoubleBuffer v);
    void glVertexAttrib3fv(int index, FloatBuffer v);
    void glVertexAttrib3sv(int index, ShortBuffer v);
    void glVertexAttrib3dv(int index, DoubleBuffer v);
    void glVertexAttrib4fv(int index, FloatBuffer v);
    void glVertexAttrib4sv(int index, ShortBuffer v);
    void glVertexAttrib4dv(int index, DoubleBuffer v);
    void glVertexAttrib4iv(int index, IntBuffer v);
    void glVertexAttrib4bv(int index, ByteBuffer v);
    void glVertexAttrib4ubv(int index, ByteBuffer v);
    void glVertexAttrib4usv(int index, ShortBuffer v);
    void glVertexAttrib4uiv(int index, IntBuffer v);
    void glVertexAttrib4Nbv(int index, ByteBuffer v);
    void glVertexAttrib4Nsv(int index, ShortBuffer v);
    void glVertexAttrib4Niv(int index, IntBuffer v);
    void glVertexAttrib4Nubv(int index, ByteBuffer v);
    void glVertexAttrib4Nusv(int index, ShortBuffer v);
    void glVertexAttrib4Nuiv(int index, IntBuffer v);
    void glVertexAttribPointer(int index, int size, int type, boolean normalized, int stride, ByteBuffer pointer);
    void glVertexAttribPointer(int index, int size, int type, boolean normalized, int stride, long pointer);
    void glVertexAttribPointer(int index, int size, int type, boolean normalized, int stride, ShortBuffer pointer);
    void glVertexAttribPointer(int index, int size, int type, boolean normalized, int stride, IntBuffer pointer);
    void glVertexAttribPointer(int index, int size, int type, boolean normalized, int stride, FloatBuffer pointer);
    void glEnableVertexAttribArray(int index);
    void glDisableVertexAttribArray(int index);
    void glBindAttribLocation(int program, int index, ByteBuffer name);
    void glBindAttribLocation(int program, int index, CharSequence name);
    void glGetActiveAttrib(int program, int index, IntBuffer length, IntBuffer size, IntBuffer type, ByteBuffer name);
    String glGetActiveAttrib(int program, int index, int maxLength, IntBuffer size, IntBuffer type);
    String glGetActiveAttrib(int program, int index, IntBuffer size, IntBuffer type);
    int glGetAttribLocation(int program, ByteBuffer name);
    int glGetAttribLocation(int program, CharSequence name);
    void glGetVertexAttribiv(int index, int pname, IntBuffer params);
    int glGetVertexAttribi(int index, int pname);
    void glGetVertexAttribfv(int index, int pname, FloatBuffer params);
    void glGetVertexAttribdv(int index, int pname, DoubleBuffer params);
    // void glGetVertexAttribPointerv(int index, int pname, PointerBuffer pointer);
    long glGetVertexAttribPointer(int index, int pname);
    void glDrawBuffers(IntBuffer bufs);
    void glDrawBuffers(int buf);
    void glBlendEquationSeparate(int modeRGB, int modeAlpha);
    void glStencilOpSeparate(int face, int sfail, int dpfail, int dppass);
    void glStencilFuncSeparate(int face, int func, int ref, int mask);
    void glStencilMaskSeparate(int face, int mask);
    // void glShaderSource(int shader, PointerBuffer strings, int[] length);
    void glUniform1fv(int location, float[] value);
    void glUniform2fv(int location, float[] value);
    void glUniform3fv(int location, float[] value);
    void glUniform4fv(int location, float[] value);
    void glUniform1iv(int location, int[] value);
    void glUniform2iv(int location, int[] value);
    void glUniform3iv(int location, int[] value);
    void glUniform4iv(int location, int[] value);
    void glUniformMatrix2fv(int location, boolean transpose, float[] value);
    void glUniformMatrix3fv(int location, boolean transpose, float[] value);
    void glUniformMatrix4fv(int location, boolean transpose, float[] value);
    void glGetShaderiv(int shader, int pname, int[] params);
    void glGetProgramiv(int program, int pname, int[] params);
    void glGetShaderInfoLog(int shader, int[] length, ByteBuffer infoLog);
    void glGetProgramInfoLog(int program, int[] length, ByteBuffer infoLog);
    void glGetAttachedShaders(int program, int[] count, int[] shaders);
    void glGetActiveUniform(int program, int index, int[] length, int[] size, int[] type, ByteBuffer name);
    void glGetUniformfv(int program, int location, float[] params);
    void glGetUniformiv(int program, int location, int[] params);
    void glGetShaderSource(int shader, int[] length, ByteBuffer source);
    void glVertexAttrib1fv(int index, float[] v);
    void glVertexAttrib1sv(int index, short[] v);
    void glVertexAttrib1dv(int index, double[] v);
    void glVertexAttrib2fv(int index, float[] v);
    void glVertexAttrib2sv(int index, short[] v);
    void glVertexAttrib2dv(int index, double[] v);
    void glVertexAttrib3fv(int index, float[] v);
    void glVertexAttrib3sv(int index, short[] v);
    void glVertexAttrib3dv(int index, double[] v);
    void glVertexAttrib4fv(int index, float[] v);
    void glVertexAttrib4sv(int index, short[] v);
    void glVertexAttrib4dv(int index, double[] v);
    void glVertexAttrib4iv(int index, int[] v);
    void glVertexAttrib4usv(int index, short[] v);
    void glVertexAttrib4uiv(int index, int[] v);
    void glVertexAttrib4Nsv(int index, short[] v);
    void glVertexAttrib4Niv(int index, int[] v);
    void glVertexAttrib4Nusv(int index, short[] v);
    void glVertexAttrib4Nuiv(int index, int[] v);
    void glGetActiveAttrib(int program, int index, int[] length, int[] size, int[] type, ByteBuffer name);
    void glGetVertexAttribiv(int index, int pname, int[] params);
    void glGetVertexAttribfv(int index, int pname, float[] params);
    void glGetVertexAttribdv(int index, int pname, double[] params);
    void glDrawBuffers(int[] bufs);

}