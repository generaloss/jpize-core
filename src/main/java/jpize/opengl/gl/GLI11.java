package jpize.opengl.gl;

import java.nio.*;

public interface GLI11 {

    int GL_ACCUM = 256;
    int GL_LOAD = 257;
    int GL_RETURN = 258;
    int GL_MULT = 259;
    int GL_ADD = 260;
    int GL_NEVER = 512;
    int GL_LESS = 513;
    int GL_EQUAL = 514;
    int GL_LEQUAL = 515;
    int GL_GREATER = 516;
    int GL_NOTEQUAL = 517;
    int GL_GEQUAL = 518;
    int GL_ALWAYS = 519;
    int GL_CURRENT_BIT = 1;
    int GL_POINT_BIT = 2;
    int GL_LINE_BIT = 4;
    int GL_POLYGON_BIT = 8;
    int GL_POLYGON_STIPPLE_BIT = 16;
    int GL_PIXEL_MODE_BIT = 32;
    int GL_LIGHTING_BIT = 64;
    int GL_FOG_BIT = 128;
    int GL_DEPTH_BUFFER_BIT = 256;
    int GL_ACCUM_BUFFER_BIT = 512;
    int GL_STENCIL_BUFFER_BIT = 1024;
    int GL_VIEWPORT_BIT = 2048;
    int GL_TRANSFORM_BIT = 4096;
    int GL_ENABLE_BIT = 8192;
    int GL_COLOR_BUFFER_BIT = 16384;
    int GL_HINT_BIT = 32768;
    int GL_EVAL_BIT = 65536;
    int GL_LIST_BIT = 131072;
    int GL_TEXTURE_BIT = 262144;
    int GL_SCISSOR_BIT = 524288;
    int GL_ALL_ATTRIB_BITS = 1048575;
    int GL_POINTS = 0;
    int GL_LINES = 1;
    int GL_LINE_LOOP = 2;
    int GL_LINE_STRIP = 3;
    int GL_TRIANGLES = 4;
    int GL_TRIANGLE_STRIP = 5;
    int GL_TRIANGLE_FAN = 6;
    int GL_QUADS = 7;
    int GL_QUAD_STRIP = 8;
    int GL_POLYGON = 9;
    int GL_ZERO = 0;
    int GL_ONE = 1;
    int GL_SRC_COLOR = 768;
    int GL_ONE_MINUS_SRC_COLOR = 769;
    int GL_SRC_ALPHA = 770;
    int GL_ONE_MINUS_SRC_ALPHA = 771;
    int GL_DST_ALPHA = 772;
    int GL_ONE_MINUS_DST_ALPHA = 773;
    int GL_DST_COLOR = 774;
    int GL_ONE_MINUS_DST_COLOR = 775;
    int GL_SRC_ALPHA_SATURATE = 776;
    int GL_TRUE = 1;
    int GL_FALSE = 0;
    int GL_CLIP_PLANE0 = 12288;
    int GL_CLIP_PLANE1 = 12289;
    int GL_CLIP_PLANE2 = 12290;
    int GL_CLIP_PLANE3 = 12291;
    int GL_CLIP_PLANE4 = 12292;
    int GL_CLIP_PLANE5 = 12293;
    int GL_BYTE = 5120;
    int GL_UNSIGNED_BYTE = 5121;
    int GL_SHORT = 5122;
    int GL_UNSIGNED_SHORT = 5123;
    int GL_INT = 5124;
    int GL_UNSIGNED_INT = 5125;
    int GL_FLOAT = 5126;
    int GL_2_BYTES = 5127;
    int GL_3_BYTES = 5128;
    int GL_4_BYTES = 5129;
    int GL_DOUBLE = 5130;
    int GL_NONE = 0;
    int GL_FRONT_LEFT = 1024;
    int GL_FRONT_RIGHT = 1025;
    int GL_BACK_LEFT = 1026;
    int GL_BACK_RIGHT = 1027;
    int GL_FRONT = 1028;
    int GL_BACK = 1029;
    int GL_LEFT = 1030;
    int GL_RIGHT = 1031;
    int GL_FRONT_AND_BACK = 1032;
    int GL_AUX0 = 1033;
    int GL_AUX1 = 1034;
    int GL_AUX2 = 1035;
    int GL_AUX3 = 1036;
    int GL_NO_ERROR = 0;
    int GL_INVALID_ENUM = 1280;
    int GL_INVALID_VALUE = 1281;
    int GL_INVALID_OPERATION = 1282;
    int GL_STACK_OVERFLOW = 1283;
    int GL_STACK_UNDERFLOW = 1284;
    int GL_OUT_OF_MEMORY = 1285;
    int GL_2D = 1536;
    int GL_3D = 1537;
    int GL_3D_COLOR = 1538;
    int GL_3D_COLOR_TEXTURE = 1539;
    int GL_4D_COLOR_TEXTURE = 1540;
    int GL_PASS_THROUGH_TOKEN = 1792;
    int GL_POINT_TOKEN = 1793;
    int GL_LINE_TOKEN = 1794;
    int GL_POLYGON_TOKEN = 1795;
    int GL_BITMAP_TOKEN = 1796;
    int GL_DRAW_PIXEL_TOKEN = 1797;
    int GL_COPY_PIXEL_TOKEN = 1798;
    int GL_LINE_RESET_TOKEN = 1799;
    int GL_EXP = 2048;
    int GL_EXP2 = 2049;
    int GL_CW = 2304;
    int GL_CCW = 2305;
    int GL_COEFF = 2560;
    int GL_ORDER = 2561;
    int GL_DOMAIN = 2562;
    int GL_CURRENT_COLOR = 2816;
    int GL_CURRENT_INDEX = 2817;
    int GL_CURRENT_NORMAL = 2818;
    int GL_CURRENT_TEXTURE_COORDS = 2819;
    int GL_CURRENT_RASTER_COLOR = 2820;
    int GL_CURRENT_RASTER_INDEX = 2821;
    int GL_CURRENT_RASTER_TEXTURE_COORDS = 2822;
    int GL_CURRENT_RASTER_POSITION = 2823;
    int GL_CURRENT_RASTER_POSITION_VALID = 2824;
    int GL_CURRENT_RASTER_DISTANCE = 2825;
    int GL_POINT_SMOOTH = 2832;
    int GL_POINT_SIZE = 2833;
    int GL_POINT_SIZE_RANGE = 2834;
    int GL_POINT_SIZE_GRANULARITY = 2835;
    int GL_LINE_SMOOTH = 2848;
    int GL_LINE_WIDTH = 2849;
    int GL_LINE_WIDTH_RANGE = 2850;
    int GL_LINE_WIDTH_GRANULARITY = 2851;
    int GL_LINE_STIPPLE = 2852;
    int GL_LINE_STIPPLE_PATTERN = 2853;
    int GL_LINE_STIPPLE_REPEAT = 2854;
    int GL_LIST_MODE = 2864;
    int GL_MAX_LIST_NESTING = 2865;
    int GL_LIST_BASE = 2866;
    int GL_LIST_INDEX = 2867;
    int GL_POLYGON_MODE = 2880;
    int GL_POLYGON_SMOOTH = 2881;
    int GL_POLYGON_STIPPLE = 2882;
    int GL_EDGE_FLAG = 2883;
    int GL_CULL_FACE = 2884;
    int GL_CULL_FACE_MODE = 2885;
    int GL_FRONT_FACE = 2886;
    int GL_LIGHTING = 2896;
    int GL_LIGHT_MODEL_LOCAL_VIEWER = 2897;
    int GL_LIGHT_MODEL_TWO_SIDE = 2898;
    int GL_LIGHT_MODEL_AMBIENT = 2899;
    int GL_SHADE_MODEL = 2900;
    int GL_COLOR_MATERIAL_FACE = 2901;
    int GL_COLOR_MATERIAL_PARAMETER = 2902;
    int GL_COLOR_MATERIAL = 2903;
    int GL_FOG = 2912;
    int GL_FOG_INDEX = 2913;
    int GL_FOG_DENSITY = 2914;
    int GL_FOG_START = 2915;
    int GL_FOG_END = 2916;
    int GL_FOG_MODE = 2917;
    int GL_FOG_COLOR = 2918;
    int GL_DEPTH_RANGE = 2928;
    int GL_DEPTH_TEST = 2929;
    int GL_DEPTH_WRITEMASK = 2930;
    int GL_DEPTH_CLEAR_VALUE = 2931;
    int GL_DEPTH_FUNC = 2932;
    int GL_ACCUM_CLEAR_VALUE = 2944;
    int GL_STENCIL_TEST = 2960;
    int GL_STENCIL_CLEAR_VALUE = 2961;
    int GL_STENCIL_FUNC = 2962;
    int GL_STENCIL_VALUE_MASK = 2963;
    int GL_STENCIL_FAIL = 2964;
    int GL_STENCIL_PASS_DEPTH_FAIL = 2965;
    int GL_STENCIL_PASS_DEPTH_PASS = 2966;
    int GL_STENCIL_REF = 2967;
    int GL_STENCIL_WRITEMASK = 2968;
    int GL_MATRIX_MODE = 2976;
    int GL_NORMALIZE = 2977;
    int GL_VIEWPORT = 2978;
    int GL_MODELVIEW_STACK_DEPTH = 2979;
    int GL_PROJECTION_STACK_DEPTH = 2980;
    int GL_TEXTURE_STACK_DEPTH = 2981;
    int GL_MODELVIEW_MATRIX = 2982;
    int GL_PROJECTION_MATRIX = 2983;
    int GL_TEXTURE_MATRIX = 2984;
    int GL_ATTRIB_STACK_DEPTH = 2992;
    int GL_CLIENT_ATTRIB_STACK_DEPTH = 2993;
    int GL_ALPHA_TEST = 3008;
    int GL_ALPHA_TEST_FUNC = 3009;
    int GL_ALPHA_TEST_REF = 3010;
    int GL_DITHER = 3024;
    int GL_BLEND_DST = 3040;
    int GL_BLEND_SRC = 3041;
    int GL_BLEND = 3042;
    int GL_LOGIC_OP_MODE = 3056;
    int GL_INDEX_LOGIC_OP = 3057;
    int GL_LOGIC_OP = 3057;
    int GL_COLOR_LOGIC_OP = 3058;
    int GL_AUX_BUFFERS = 3072;
    int GL_DRAW_BUFFER = 3073;
    int GL_READ_BUFFER = 3074;
    int GL_SCISSOR_BOX = 3088;
    int GL_SCISSOR_TEST = 3089;
    int GL_INDEX_CLEAR_VALUE = 3104;
    int GL_INDEX_WRITEMASK = 3105;
    int GL_COLOR_CLEAR_VALUE = 3106;
    int GL_COLOR_WRITEMASK = 3107;
    int GL_INDEX_MODE = 3120;
    int GL_RGBA_MODE = 3121;
    int GL_DOUBLEBUFFER = 3122;
    int GL_STEREO = 3123;
    int GL_RENDER_MODE = 3136;
    int GL_PERSPECTIVE_CORRECTION_HINT = 3152;
    int GL_POINT_SMOOTH_HINT = 3153;
    int GL_LINE_SMOOTH_HINT = 3154;
    int GL_POLYGON_SMOOTH_HINT = 3155;
    int GL_FOG_HINT = 3156;
    int GL_TEXTURE_GEN_S = 3168;
    int GL_TEXTURE_GEN_T = 3169;
    int GL_TEXTURE_GEN_R = 3170;
    int GL_TEXTURE_GEN_Q = 3171;
    int GL_PIXEL_MAP_I_TO_I = 3184;
    int GL_PIXEL_MAP_S_TO_S = 3185;
    int GL_PIXEL_MAP_I_TO_R = 3186;
    int GL_PIXEL_MAP_I_TO_G = 3187;
    int GL_PIXEL_MAP_I_TO_B = 3188;
    int GL_PIXEL_MAP_I_TO_A = 3189;
    int GL_PIXEL_MAP_R_TO_R = 3190;
    int GL_PIXEL_MAP_G_TO_G = 3191;
    int GL_PIXEL_MAP_B_TO_B = 3192;
    int GL_PIXEL_MAP_A_TO_A = 3193;
    int GL_PIXEL_MAP_I_TO_I_SIZE = 3248;
    int GL_PIXEL_MAP_S_TO_S_SIZE = 3249;
    int GL_PIXEL_MAP_I_TO_R_SIZE = 3250;
    int GL_PIXEL_MAP_I_TO_G_SIZE = 3251;
    int GL_PIXEL_MAP_I_TO_B_SIZE = 3252;
    int GL_PIXEL_MAP_I_TO_A_SIZE = 3253;
    int GL_PIXEL_MAP_R_TO_R_SIZE = 3254;
    int GL_PIXEL_MAP_G_TO_G_SIZE = 3255;
    int GL_PIXEL_MAP_B_TO_B_SIZE = 3256;
    int GL_PIXEL_MAP_A_TO_A_SIZE = 3257;
    int GL_UNPACK_SWAP_BYTES = 3312;
    int GL_UNPACK_LSB_FIRST = 3313;
    int GL_UNPACK_ROW_LENGTH = 3314;
    int GL_UNPACK_SKIP_ROWS = 3315;
    int GL_UNPACK_SKIP_PIXELS = 3316;
    int GL_UNPACK_ALIGNMENT = 3317;
    int GL_PACK_SWAP_BYTES = 3328;
    int GL_PACK_LSB_FIRST = 3329;
    int GL_PACK_ROW_LENGTH = 3330;
    int GL_PACK_SKIP_ROWS = 3331;
    int GL_PACK_SKIP_PIXELS = 3332;
    int GL_PACK_ALIGNMENT = 3333;
    int GL_MAP_COLOR = 3344;
    int GL_MAP_STENCIL = 3345;
    int GL_INDEX_SHIFT = 3346;
    int GL_INDEX_OFFSET = 3347;
    int GL_RED_SCALE = 3348;
    int GL_RED_BIAS = 3349;
    int GL_ZOOM_X = 3350;
    int GL_ZOOM_Y = 3351;
    int GL_GREEN_SCALE = 3352;
    int GL_GREEN_BIAS = 3353;
    int GL_BLUE_SCALE = 3354;
    int GL_BLUE_BIAS = 3355;
    int GL_ALPHA_SCALE = 3356;
    int GL_ALPHA_BIAS = 3357;
    int GL_DEPTH_SCALE = 3358;
    int GL_DEPTH_BIAS = 3359;
    int GL_MAX_EVAL_ORDER = 3376;
    int GL_MAX_LIGHTS = 3377;
    int GL_MAX_CLIP_PLANES = 3378;
    int GL_MAX_TEXTURE_SIZE = 3379;
    int GL_MAX_PIXEL_MAP_TABLE = 3380;
    int GL_MAX_ATTRIB_STACK_DEPTH = 3381;
    int GL_MAX_MODELVIEW_STACK_DEPTH = 3382;
    int GL_MAX_NAME_STACK_DEPTH = 3383;
    int GL_MAX_PROJECTION_STACK_DEPTH = 3384;
    int GL_MAX_TEXTURE_STACK_DEPTH = 3385;
    int GL_MAX_VIEWPORT_DIMS = 3386;
    int GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 3387;
    int GL_SUBPIXEL_BITS = 3408;
    int GL_INDEX_BITS = 3409;
    int GL_RED_BITS = 3410;
    int GL_GREEN_BITS = 3411;
    int GL_BLUE_BITS = 3412;
    int GL_ALPHA_BITS = 3413;
    int GL_DEPTH_BITS = 3414;
    int GL_STENCIL_BITS = 3415;
    int GL_ACCUM_RED_BITS = 3416;
    int GL_ACCUM_GREEN_BITS = 3417;
    int GL_ACCUM_BLUE_BITS = 3418;
    int GL_ACCUM_ALPHA_BITS = 3419;
    int GL_NAME_STACK_DEPTH = 3440;
    int GL_AUTO_NORMAL = 3456;
    int GL_MAP1_COLOR_4 = 3472;
    int GL_MAP1_INDEX = 3473;
    int GL_MAP1_NORMAL = 3474;
    int GL_MAP1_TEXTURE_COORD_1 = 3475;
    int GL_MAP1_TEXTURE_COORD_2 = 3476;
    int GL_MAP1_TEXTURE_COORD_3 = 3477;
    int GL_MAP1_TEXTURE_COORD_4 = 3478;
    int GL_MAP1_VERTEX_3 = 3479;
    int GL_MAP1_VERTEX_4 = 3480;
    int GL_MAP2_COLOR_4 = 3504;
    int GL_MAP2_INDEX = 3505;
    int GL_MAP2_NORMAL = 3506;
    int GL_MAP2_TEXTURE_COORD_1 = 3507;
    int GL_MAP2_TEXTURE_COORD_2 = 3508;
    int GL_MAP2_TEXTURE_COORD_3 = 3509;
    int GL_MAP2_TEXTURE_COORD_4 = 3510;
    int GL_MAP2_VERTEX_3 = 3511;
    int GL_MAP2_VERTEX_4 = 3512;
    int GL_MAP1_GRID_DOMAIN = 3536;
    int GL_MAP1_GRID_SEGMENTS = 3537;
    int GL_MAP2_GRID_DOMAIN = 3538;
    int GL_MAP2_GRID_SEGMENTS = 3539;
    int GL_TEXTURE_1D = 3552;
    int GL_TEXTURE_2D = 3553;
    int GL_FEEDBACK_BUFFER_POINTER = 3568;
    int GL_FEEDBACK_BUFFER_SIZE = 3569;
    int GL_FEEDBACK_BUFFER_TYPE = 3570;
    int GL_SELECTION_BUFFER_POINTER = 3571;
    int GL_SELECTION_BUFFER_SIZE = 3572;
    int GL_TEXTURE_WIDTH = 4096;
    int GL_TEXTURE_HEIGHT = 4097;
    int GL_TEXTURE_INTERNAL_FORMAT = 4099;
    int GL_TEXTURE_COMPONENTS = 4099;
    int GL_TEXTURE_BORDER_COLOR = 4100;
    int GL_TEXTURE_BORDER = 4101;
    int GL_DONT_CARE = 4352;
    int GL_FASTEST = 4353;
    int GL_NICEST = 4354;
    int GL_LIGHT0 = 16384;
    int GL_LIGHT1 = 16385;
    int GL_LIGHT2 = 16386;
    int GL_LIGHT3 = 16387;
    int GL_LIGHT4 = 16388;
    int GL_LIGHT5 = 16389;
    int GL_LIGHT6 = 16390;
    int GL_LIGHT7 = 16391;
    int GL_AMBIENT = 4608;
    int GL_DIFFUSE = 4609;
    int GL_SPECULAR = 4610;
    int GL_POSITION = 4611;
    int GL_SPOT_DIRECTION = 4612;
    int GL_SPOT_EXPONENT = 4613;
    int GL_SPOT_CUTOFF = 4614;
    int GL_CONSTANT_ATTENUATION = 4615;
    int GL_LINEAR_ATTENUATION = 4616;
    int GL_QUADRATIC_ATTENUATION = 4617;
    int GL_COMPILE = 4864;
    int GL_COMPILE_AND_EXECUTE = 4865;
    int GL_CLEAR = 5376;
    int GL_AND = 5377;
    int GL_AND_REVERSE = 5378;
    int GL_COPY = 5379;
    int GL_AND_INVERTED = 5380;
    int GL_NOOP = 5381;
    int GL_XOR = 5382;
    int GL_OR = 5383;
    int GL_NOR = 5384;
    int GL_EQUIV = 5385;
    int GL_INVERT = 5386;
    int GL_OR_REVERSE = 5387;
    int GL_COPY_INVERTED = 5388;
    int GL_OR_INVERTED = 5389;
    int GL_NAND = 5390;
    int GL_SET = 5391;
    int GL_EMISSION = 5632;
    int GL_SHININESS = 5633;
    int GL_AMBIENT_AND_DIFFUSE = 5634;
    int GL_COLOR_INDEXES = 5635;
    int GL_MODELVIEW = 5888;
    int GL_PROJECTION = 5889;
    int GL_TEXTURE = 5890;
    int GL_COLOR = 6144;
    int GL_DEPTH = 6145;
    int GL_STENCIL = 6146;
    int GL_COLOR_INDEX = 6400;
    int GL_STENCIL_INDEX = 6401;
    int GL_DEPTH_COMPONENT = 6402;
    int GL_RED = 6403;
    int GL_GREEN = 6404;
    int GL_BLUE = 6405;
    int GL_ALPHA = 6406;
    int GL_RGB = 6407;
    int GL_RGBA = 6408;
    int GL_LUMINANCE = 6409;
    int GL_LUMINANCE_ALPHA = 6410;
    int GL_BITMAP = 6656;
    int GL_POINT = 6912;
    int GL_LINE = 6913;
    int GL_FILL = 6914;
    int GL_RENDER = 7168;
    int GL_FEEDBACK = 7169;
    int GL_SELECT = 7170;
    int GL_FLAT = 7424;
    int GL_SMOOTH = 7425;
    int GL_KEEP = 7680;
    int GL_REPLACE = 7681;
    int GL_INCR = 7682;
    int GL_DECR = 7683;
    int GL_VENDOR = 7936;
    int GL_RENDERER = 7937;
    int GL_VERSION = 7938;
    int GL_EXTENSIONS = 7939;
    int GL_S = 8192;
    int GL_T = 8193;
    int GL_R = 8194;
    int GL_Q = 8195;
    int GL_MODULATE = 8448;
    int GL_DECAL = 8449;
    int GL_TEXTURE_ENV_MODE = 8704;
    int GL_TEXTURE_ENV_COLOR = 8705;
    int GL_TEXTURE_ENV = 8960;
    int GL_EYE_LINEAR = 9216;
    int GL_OBJECT_LINEAR = 9217;
    int GL_SPHERE_MAP = 9218;
    int GL_TEXTURE_GEN_MODE = 9472;
    int GL_OBJECT_PLANE = 9473;
    int GL_EYE_PLANE = 9474;
    int GL_NEAREST = 9728;
    int GL_LINEAR = 9729;
    int GL_NEAREST_MIPMAP_NEAREST = 9984;
    int GL_LINEAR_MIPMAP_NEAREST = 9985;
    int GL_NEAREST_MIPMAP_LINEAR = 9986;
    int GL_LINEAR_MIPMAP_LINEAR = 9987;
    int GL_TEXTURE_MAG_FILTER = 10240;
    int GL_TEXTURE_MIN_FILTER = 10241;
    int GL_TEXTURE_WRAP_S = 10242;
    int GL_TEXTURE_WRAP_T = 10243;
    int GL_CLAMP = 10496;
    int GL_REPEAT = 10497;
    int GL_CLIENT_PIXEL_STORE_BIT = 1;
    int GL_CLIENT_VERTEX_ARRAY_BIT = 2;
    int GL_CLIENT_ALL_ATTRIB_BITS = -1;
    int GL_POLYGON_OFFSET_FACTOR = 32824;
    int GL_POLYGON_OFFSET_UNITS = 10752;
    int GL_POLYGON_OFFSET_POINT = 10753;
    int GL_POLYGON_OFFSET_LINE = 10754;
    int GL_POLYGON_OFFSET_FILL = 32823;
    int GL_ALPHA4 = 32827;
    int GL_ALPHA8 = 32828;
    int GL_ALPHA12 = 32829;
    int GL_ALPHA16 = 32830;
    int GL_LUMINANCE4 = 32831;
    int GL_LUMINANCE8 = 32832;
    int GL_LUMINANCE12 = 32833;
    int GL_LUMINANCE16 = 32834;
    int GL_LUMINANCE4_ALPHA4 = 32835;
    int GL_LUMINANCE6_ALPHA2 = 32836;
    int GL_LUMINANCE8_ALPHA8 = 32837;
    int GL_LUMINANCE12_ALPHA4 = 32838;
    int GL_LUMINANCE12_ALPHA12 = 32839;
    int GL_LUMINANCE16_ALPHA16 = 32840;
    int GL_INTENSITY = 32841;
    int GL_INTENSITY4 = 32842;
    int GL_INTENSITY8 = 32843;
    int GL_INTENSITY12 = 32844;
    int GL_INTENSITY16 = 32845;
    int GL_R3_G3_B2 = 10768;
    int GL_RGB4 = 32847;
    int GL_RGB5 = 32848;
    int GL_RGB8 = 32849;
    int GL_RGB10 = 32850;
    int GL_RGB12 = 32851;
    int GL_RGB16 = 32852;
    int GL_RGBA2 = 32853;
    int GL_RGBA4 = 32854;
    int GL_RGB5_A1 = 32855;
    int GL_RGBA8 = 32856;
    int GL_RGB10_A2 = 32857;
    int GL_RGBA12 = 32858;
    int GL_RGBA16 = 32859;
    int GL_TEXTURE_RED_SIZE = 32860;
    int GL_TEXTURE_GREEN_SIZE = 32861;
    int GL_TEXTURE_BLUE_SIZE = 32862;
    int GL_TEXTURE_ALPHA_SIZE = 32863;
    int GL_TEXTURE_LUMINANCE_SIZE = 32864;
    int GL_TEXTURE_INTENSITY_SIZE = 32865;
    int GL_PROXY_TEXTURE_1D = 32867;
    int GL_PROXY_TEXTURE_2D = 32868;
    int GL_TEXTURE_PRIORITY = 32870;
    int GL_TEXTURE_RESIDENT = 32871;
    int GL_TEXTURE_BINDING_1D = 32872;
    int GL_TEXTURE_BINDING_2D = 32873;
    int GL_VERTEX_ARRAY = 32884;
    int GL_NORMAL_ARRAY = 32885;
    int GL_COLOR_ARRAY = 32886;
    int GL_INDEX_ARRAY = 32887;
    int GL_TEXTURE_COORD_ARRAY = 32888;
    int GL_EDGE_FLAG_ARRAY = 32889;
    int GL_VERTEX_ARRAY_SIZE = 32890;
    int GL_VERTEX_ARRAY_TYPE = 32891;
    int GL_VERTEX_ARRAY_STRIDE = 32892;
    int GL_NORMAL_ARRAY_TYPE = 32894;
    int GL_NORMAL_ARRAY_STRIDE = 32895;
    int GL_COLOR_ARRAY_SIZE = 32897;
    int GL_COLOR_ARRAY_TYPE = 32898;
    int GL_COLOR_ARRAY_STRIDE = 32899;
    int GL_INDEX_ARRAY_TYPE = 32901;
    int GL_INDEX_ARRAY_STRIDE = 32902;
    int GL_TEXTURE_COORD_ARRAY_SIZE = 32904;
    int GL_TEXTURE_COORD_ARRAY_TYPE = 32905;
    int GL_TEXTURE_COORD_ARRAY_STRIDE = 32906;
    int GL_EDGE_FLAG_ARRAY_STRIDE = 32908;
    int GL_VERTEX_ARRAY_POINTER = 32910;
    int GL_NORMAL_ARRAY_POINTER = 32911;
    int GL_COLOR_ARRAY_POINTER = 32912;
    int GL_INDEX_ARRAY_POINTER = 32913;
    int GL_TEXTURE_COORD_ARRAY_POINTER = 32914;
    int GL_EDGE_FLAG_ARRAY_POINTER = 32915;
    int GL_V2F = 10784;
    int GL_V3F = 10785;
    int GL_C4UB_V2F = 10786;
    int GL_C4UB_V3F = 10787;
    int GL_C3F_V3F = 10788;
    int GL_N3F_V3F = 10789;
    int GL_C4F_N3F_V3F = 10790;
    int GL_T2F_V3F = 10791;
    int GL_T4F_V4F = 10792;
    int GL_T2F_C4UB_V3F = 10793;
    int GL_T2F_C3F_V3F = 10794;
    int GL_T2F_N3F_V3F = 10795;
    int GL_T2F_C4F_N3F_V3F = 10796;
    int GL_T4F_C4F_N3F_V4F = 10797;

    void glEnable(int target);
    void glDisable(int target);
    void glAccum(int var0, float var1);
    void glAlphaFunc(int var0, float var1);
    boolean glAreTexturesResident(IntBuffer textures, ByteBuffer residences);
    boolean glAreTexturesResident(int texture, ByteBuffer residences);
    void glArrayElement(int var0);
    void glBegin(int var0);
    void glBindTexture(int target, int texture);
    void glBitmap(int w, int h, float xOrig, float yOrig, float xInc, float yInc, ByteBuffer data);
    void glBitmap(int w, int h, float xOrig, float yOrig, float xInc, float yInc, long data);
    void glBlendFunc(int sfactor, int dfactor);
    void glCallList(int var0);
    void glCallLists(int type, ByteBuffer lists);
    void glCallLists(ByteBuffer lists);
    void glCallLists(ShortBuffer lists);
    void glCallLists(IntBuffer lists);
    void glClear(int mask);
    void glClearAccum(float var0, float var1, float var2, float var3);
    void glClearColor(float red, float green, float blue, float alpha);
    void glClearDepth(double depth);
    void glClearIndex(float var0);
    void glClearStencil(int s);
    void glClipPlane(int plane, DoubleBuffer equation);
    void glColor3b(byte var0, byte var1, byte var2);
    void glColor3s(short var0, short var1, short var2);
    void glColor3i(int var0, int var1, int var2);
    void glColor3f(float var0, float var1, float var2);
    void glColor3d(double var0, double var2, double var4);
    void glColor3ub(byte var0, byte var1, byte var2);
    void glColor3us(short var0, short var1, short var2);
    void glColor3ui(int var0, int var1, int var2);
    void glColor3bv(ByteBuffer v);
    void glColor3sv(ShortBuffer v);
    void glColor3iv(IntBuffer v);
    void glColor3fv(FloatBuffer v);
    void glColor3dv(DoubleBuffer v);
    void glColor3ubv(ByteBuffer v);
    void glColor3usv(ShortBuffer v);
    void glColor3uiv(IntBuffer v);
    void glColor4b(byte var0, byte var1, byte var2, byte var3);
    void glColor4s(short var0, short var1, short var2, short var3);
    void glColor4i(int var0, int var1, int var2, int var3);
    void glColor4f(float var0, float var1, float var2, float var3);
    void glColor4d(double var0, double var2, double var4, double var6);
    void glColor4ub(byte var0, byte var1, byte var2, byte var3);
    void glColor4us(short var0, short var1, short var2, short var3);
    void glColor4ui(int var0, int var1, int var2, int var3);
    void glColor4bv(ByteBuffer v);
    void glColor4sv(ShortBuffer v);
    void glColor4iv(IntBuffer v);
    void glColor4fv(FloatBuffer v);
    void glColor4dv(DoubleBuffer v);
    void glColor4ubv(ByteBuffer v);
    void glColor4usv(ShortBuffer v);
    void glColor4uiv(IntBuffer v);
    void glColorMask(boolean red, boolean green, boolean blue, boolean alpha);
    void glColorMaterial(int var0, int var1);
    void glColorPointer(int size, int type, int stride, ByteBuffer pointer);
    void glColorPointer(int size, int type, int stride, long pointer);
    void glColorPointer(int size, int type, int stride, ShortBuffer pointer);
    void glColorPointer(int size, int type, int stride, IntBuffer pointer);
    void glColorPointer(int size, int type, int stride, FloatBuffer pointer);
    void glCopyPixels(int var0, int var1, int var2, int var3, int var4);
    void glCullFace(int mode);
    void glDeleteLists(int var0, int var1);
    void glDepthFunc(int func);
    void glDepthMask(boolean flag);
    void glDepthRange(double zNear, double zFar);
    void glDisableClientState(int var0);
    void glDrawArrays(int mode, int first, int count);
    void glDrawBuffer(int buf);
    void glDrawElements(int mode, int count, int type, long indices);
    void glDrawElements(int mode, int type, ByteBuffer indices);
    void glDrawElements(int mode, ByteBuffer indices);
    void glDrawElements(int mode, ShortBuffer indices);
    void glDrawElements(int mode, IntBuffer indices);
    void glDrawPixels(int width, int height, int format, int type, ByteBuffer pixels);
    void glDrawPixels(int width, int height, int format, int type, long pixels);
    void glDrawPixels(int width, int height, int format, int type, ShortBuffer pixels);
    void glDrawPixels(int width, int height, int format, int type, IntBuffer pixels);
    void glDrawPixels(int width, int height, int format, int type, FloatBuffer pixels);
    void glEdgeFlag(boolean var0);
    void glEdgeFlagv(ByteBuffer flag);
    void glEdgeFlagPointer(int stride, ByteBuffer pointer);
    void glEdgeFlagPointer(int stride, long pointer);
    void glEnableClientState(int var0);
    void glEnd();
    void glEvalCoord1f(float var0);
    void glEvalCoord1fv(FloatBuffer u);
    void glEvalCoord1d(double var0);
    void glEvalCoord1dv(DoubleBuffer u);
    void glEvalCoord2f(float var0, float var1);
    void glEvalCoord2fv(FloatBuffer u);
    void glEvalCoord2d(double var0, double var2);
    void glEvalCoord2dv(DoubleBuffer u);
    void glEvalMesh1(int var0, int var1, int var2);
    void glEvalMesh2(int var0, int var1, int var2, int var3, int var4);
    void glEvalPoint1(int var0);
    void glEvalPoint2(int var0, int var1);
    void glFeedbackBuffer(int type, FloatBuffer buffer);
    void glFinish();
    void glFlush();
    void glFogi(int var0, int var1);
    void glFogiv(int pname, IntBuffer params);
    void glFogf(int var0, float var1);
    void glFogfv(int pname, FloatBuffer params);
    void glFrontFace(int dir);
    int glGenLists(int var0);
    void glGenTextures(IntBuffer textures);
    int glGenTextures();
    void glDeleteTextures(IntBuffer textures);
    void glDeleteTextures(int texture);
    void glGetClipPlane(int plane, DoubleBuffer equation);
    void glGetBooleanv(int pname, ByteBuffer params);
    boolean glGetBoolean(int pname);
    void glGetFloatv(int pname, FloatBuffer params);
    float glGetFloat(int pname);
    void glGetIntegerv(int pname, IntBuffer params);
    int glGetInteger(int pname);
    void glGetDoublev(int pname, DoubleBuffer params);
    double glGetDouble(int pname);
    int glGetError();
    void glGetLightiv(int light, int pname, IntBuffer data);
    int glGetLighti(int light, int pname);
    void glGetLightfv(int light, int pname, FloatBuffer data);
    float glGetLightf(int light, int pname);
    void glGetMapiv(int target, int query, IntBuffer data);
    int glGetMapi(int target, int query);
    void glGetMapfv(int target, int query, FloatBuffer data);
    float glGetMapf(int target, int query);
    void glGetMapdv(int target, int query, DoubleBuffer data);
    double glGetMapd(int target, int query);
    void glGetMaterialiv(int face, int pname, IntBuffer data);
    void glGetMaterialfv(int face, int pname, FloatBuffer data);
    void glGetPixelMapfv(int map, FloatBuffer data);
    void glGetPixelMapfv(int map, long data);
    void glGetPixelMapusv(int map, ShortBuffer data);
    void glGetPixelMapusv(int map, long data);
    void glGetPixelMapuiv(int map, IntBuffer data);
    void glGetPixelMapuiv(int map, long data);
    // void glGetPointerv(int pname, PointerBuffer params);
    long glGetPointer(int pname);
    void glGetPolygonStipple(ByteBuffer pattern);
    void glGetPolygonStipple(long pattern);
    String glGetString(int name);
    void glGetTexEnviv(int env, int pname, IntBuffer data);
    int glGetTexEnvi(int env, int pname);
    void glGetTexEnvfv(int env, int pname, FloatBuffer data);
    float glGetTexEnvf(int env, int pname);
    void glGetTexGeniv(int coord, int pname, IntBuffer data);
    int glGetTexGeni(int coord, int pname);
    void glGetTexGenfv(int coord, int pname, FloatBuffer data);
    float glGetTexGenf(int coord, int pname);
    void glGetTexGendv(int coord, int pname, DoubleBuffer data);
    double glGetTexGend(int coord, int pname);
    void glGetTexImage(int tex, int level, int format, int type, ByteBuffer pixels);
    void glGetTexImage(int tex, int level, int format, int type, long pixels);
    void glGetTexImage(int tex, int level, int format, int type, ShortBuffer pixels);
    void glGetTexImage(int tex, int level, int format, int type, IntBuffer pixels);
    void glGetTexImage(int tex, int level, int format, int type, FloatBuffer pixels);
    void glGetTexImage(int tex, int level, int format, int type, DoubleBuffer pixels);
    void glGetTexLevelParameteriv(int target, int level, int pname, IntBuffer params);
    int glGetTexLevelParameteri(int target, int level, int pname);
    void glGetTexLevelParameterfv(int target, int level, int pname, FloatBuffer params);
    float glGetTexLevelParameterf(int target, int level, int pname);
    void glGetTexParameteriv(int target, int pname, IntBuffer params);
    int glGetTexParameteri(int target, int pname);
    void glGetTexParameterfv(int target, int pname, FloatBuffer params);
    float glGetTexParameterf(int target, int pname);
    void glHint(int target, int hint);
    void glIndexi(int var0);
    void glIndexub(byte var0);
    void glIndexs(short var0);
    void glIndexf(float var0);
    void glIndexd(double var0);
    void glIndexiv(IntBuffer index);
    void glIndexubv(ByteBuffer index);
    void glIndexsv(ShortBuffer index);
    void glIndexfv(FloatBuffer index);
    void glIndexdv(DoubleBuffer index);
    void glIndexMask(int var0);
    void glIndexPointer(int type, int stride, ByteBuffer pointer);
    void glIndexPointer(int type, int stride, long pointer);
    void glIndexPointer(int stride, ByteBuffer pointer);
    void glIndexPointer(int stride, ShortBuffer pointer);
    void glIndexPointer(int stride, IntBuffer pointer);
    void glInitNames();
    void glInterleavedArrays(int format, int stride, ByteBuffer pointer);
    void glInterleavedArrays(int format, int stride, long pointer);
    void glInterleavedArrays(int format, int stride, ShortBuffer pointer);
    void glInterleavedArrays(int format, int stride, IntBuffer pointer);
    void glInterleavedArrays(int format, int stride, FloatBuffer pointer);
    void glInterleavedArrays(int format, int stride, DoubleBuffer pointer);
    boolean glIsEnabled(int cap);
    boolean glIsList(int var0);
    boolean glIsTexture(int texture);
    void glLightModeli(int var0, int var1);
    void glLightModelf(int var0, float var1);
    void glLightModeliv(int pname, IntBuffer params);
    void glLightModelfv(int pname, FloatBuffer params);
    void glLighti(int var0, int var1, int var2);
    void glLightf(int var0, int var1, float var2);
    void glLightiv(int light, int pname, IntBuffer params);
    void glLightfv(int light, int pname, FloatBuffer params);
    void glLineStipple(int var0, short var1);
    void glLineWidth(float width);
    void glListBase(int var0);
    void glLoadMatrixf(FloatBuffer m);
    void glLoadMatrixd(DoubleBuffer m);
    void glLoadIdentity();
    void glLoadName(int var0);
    void glLogicOp(int op);
    void glMap1f(int target, float u1, float u2, int stride, int order, FloatBuffer points);
    void glMap1d(int target, double u1, double u2, int stride, int order, DoubleBuffer points);
    void glMap2f(int target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, FloatBuffer points);
    void glMap2d(int target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, DoubleBuffer points);
    void glMapGrid1f(int var0, float var1, float var2);
    void glMapGrid1d(int var0, double var1, double var3);
    void glMapGrid2f(int var0, float var1, float var2, int var3, float var4, float var5);
    void glMapGrid2d(int var0, double var1, double var3, int var5, double var6, double var8);
    void glMateriali(int var0, int var1, int var2);
    void glMaterialf(int var0, int var1, float var2);
    void glMaterialiv(int face, int pname, IntBuffer params);
    void glMaterialfv(int face, int pname, FloatBuffer params);
    void glMatrixMode(int var0);
    void glMultMatrixf(FloatBuffer m);
    void glMultMatrixd(DoubleBuffer m);
    void glFrustum(double var0, double var2, double var4, double var6, double var8, double var10);
    void glNewList(int var0, int var1);
    void glEndList();
    void glNormal3f(float var0, float var1, float var2);
    void glNormal3b(byte var0, byte var1, byte var2);
    void glNormal3s(short var0, short var1, short var2);
    void glNormal3i(int var0, int var1, int var2);
    void glNormal3d(double var0, double var2, double var4);
    void glNormal3fv(FloatBuffer v);
    void glNormal3bv(ByteBuffer v);
    void glNormal3sv(ShortBuffer v);
    void glNormal3iv(IntBuffer v);
    void glNormal3dv(DoubleBuffer v);
    void glNormalPointer(int type, int stride, ByteBuffer pointer);
    void glNormalPointer(int type, int stride, long pointer);
    void glNormalPointer(int type, int stride, ShortBuffer pointer);
    void glNormalPointer(int type, int stride, IntBuffer pointer);
    void glNormalPointer(int type, int stride, FloatBuffer pointer);
    void glOrtho(double var0, double var2, double var4, double var6, double var8, double var10);
    void glPassThrough(float var0);
    void glPixelMapfv(int map, int size, long values);
    void glPixelMapfv(int map, FloatBuffer values);
    void glPixelMapusv(int map, int size, long values);
    void glPixelMapusv(int map, ShortBuffer values);
    void glPixelMapuiv(int map, int size, long values);
    void glPixelMapuiv(int map, IntBuffer values);
    void glPixelStorei(int pname, int param);
    void glPixelStoref(int pname, float param);
    void glPixelTransferi(int var0, int var1);
    void glPixelTransferf(int var0, float var1);
    void glPixelZoom(float var0, float var1);
    void glPointSize(float size);
    void glPolygonMode(int face, int mode);
    void glPolygonOffset(float factor, float units);
    void glPolygonStipple(ByteBuffer pattern);
    void glPolygonStipple(long pattern);
    void glPushAttrib(int var0);
    void glPushClientAttrib(int var0);
    void glPopAttrib();
    void glPopClientAttrib();
    void glPopMatrix();
    void glPopName();
    void glPrioritizeTextures(IntBuffer textures, FloatBuffer priorities);
    void glPushMatrix();
    void glPushName(int var0);
    void glRasterPos2i(int var0, int var1);
    void glRasterPos2s(short var0, short var1);
    void glRasterPos2f(float var0, float var1);
    void glRasterPos2d(double var0, double var2);
    void glRasterPos2iv(IntBuffer coords);
    void glRasterPos2sv(ShortBuffer coords);
    void glRasterPos2fv(FloatBuffer coords);
    void glRasterPos2dv(DoubleBuffer coords);
    void glRasterPos3i(int var0, int var1, int var2);
    void glRasterPos3s(short var0, short var1, short var2);
    void glRasterPos3f(float var0, float var1, float var2);
    void glRasterPos3d(double var0, double var2, double var4);
    void glRasterPos3iv(IntBuffer coords);
    void glRasterPos3sv(ShortBuffer coords);
    void glRasterPos3fv(FloatBuffer coords);
    void glRasterPos3dv(DoubleBuffer coords);
    void glRasterPos4i(int var0, int var1, int var2, int var3);
    void glRasterPos4s(short var0, short var1, short var2, short var3);
    void glRasterPos4f(float var0, float var1, float var2, float var3);
    void glRasterPos4d(double var0, double var2, double var4, double var6);
    void glRasterPos4iv(IntBuffer coords);
    void glRasterPos4sv(ShortBuffer coords);
    void glRasterPos4fv(FloatBuffer coords);
    void glRasterPos4dv(DoubleBuffer coords);
    void glReadBuffer(int src);
    void glReadPixels(int x, int y, int width, int height, int format, int type, ByteBuffer pixels);
    void glReadPixels(int x, int y, int width, int height, int format, int type, long pixels);
    void glReadPixels(int x, int y, int width, int height, int format, int type, ShortBuffer pixels);
    void glReadPixels(int x, int y, int width, int height, int format, int type, IntBuffer pixels);
    void glReadPixels(int x, int y, int width, int height, int format, int type, FloatBuffer pixels);
    void glRecti(int var0, int var1, int var2, int var3);
    void glRects(short var0, short var1, short var2, short var3);
    void glRectf(float var0, float var1, float var2, float var3);
    void glRectd(double var0, double var2, double var4, double var6);
    void glRectiv(IntBuffer v1, IntBuffer v2);
    void glRectsv(ShortBuffer v1, ShortBuffer v2);
    void glRectfv(FloatBuffer v1, FloatBuffer v2);
    void glRectdv(DoubleBuffer v1, DoubleBuffer v2);
    int glRenderMode(int var0);
    void glRotatef(float var0, float var1, float var2, float var3);
    void glRotated(double var0, double var2, double var4, double var6);
    void glScalef(float var0, float var1, float var2);
    void glScaled(double var0, double var2, double var4);
    void glScissor(int x, int y, int width, int height);
    void glSelectBuffer(IntBuffer buffer);
    void glShadeModel(int var0);
    void glStencilFunc(int func, int ref, int mask);
    void glStencilMask(int mask);
    void glStencilOp(int sfail, int dpfail, int dppass);
    void glTexCoord1f(float var0);
    void glTexCoord1s(short var0);
    void glTexCoord1i(int var0);
    void glTexCoord1d(double var0);
    void glTexCoord1fv(FloatBuffer v);
    void glTexCoord1sv(ShortBuffer v);
    void glTexCoord1iv(IntBuffer v);
    void glTexCoord1dv(DoubleBuffer v);
    void glTexCoord2f(float var0, float var1);
    void glTexCoord2s(short var0, short var1);
    void glTexCoord2i(int var0, int var1);
    void glTexCoord2d(double var0, double var2);
    void glTexCoord2fv(FloatBuffer v);
    void glTexCoord2sv(ShortBuffer v);
    void glTexCoord2iv(IntBuffer v);
    void glTexCoord2dv(DoubleBuffer v);
    void glTexCoord3f(float var0, float var1, float var2);
    void glTexCoord3s(short var0, short var1, short var2);
    void glTexCoord3i(int var0, int var1, int var2);
    void glTexCoord3d(double var0, double var2, double var4);
    void glTexCoord3fv(FloatBuffer v);
    void glTexCoord3sv(ShortBuffer v);
    void glTexCoord3iv(IntBuffer v);
    void glTexCoord3dv(DoubleBuffer v);
    void glTexCoord4f(float var0, float var1, float var2, float var3);
    void glTexCoord4s(short var0, short var1, short var2, short var3);
    void glTexCoord4i(int var0, int var1, int var2, int var3);
    void glTexCoord4d(double var0, double var2, double var4, double var6);
    void glTexCoord4fv(FloatBuffer v);
    void glTexCoord4sv(ShortBuffer v);
    void glTexCoord4iv(IntBuffer v);
    void glTexCoord4dv(DoubleBuffer v);
    void glTexCoordPointer(int size, int type, int stride, ByteBuffer pointer);
    void glTexCoordPointer(int size, int type, int stride, long pointer);
    void glTexCoordPointer(int size, int type, int stride, ShortBuffer pointer);
    void glTexCoordPointer(int size, int type, int stride, IntBuffer pointer);
    void glTexCoordPointer(int size, int type, int stride, FloatBuffer pointer);
    void glTexEnvi(int var0, int var1, int var2);
    void glTexEnviv(int target, int pname, IntBuffer params);
    void glTexEnvf(int var0, int var1, float var2);
    void glTexEnvfv(int target, int pname, FloatBuffer params);
    void glTexGeni(int var0, int var1, int var2);
    void glTexGeniv(int coord, int pname, IntBuffer params);
    void glTexGenf(int var0, int var1, float var2);
    void glTexGenfv(int coord, int pname, FloatBuffer params);
    void glTexGend(int var0, int var1, double var2);
    void glTexGendv(int coord, int pname, DoubleBuffer params);
    void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, ByteBuffer pixels);
    void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, long pixels);
    void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, ShortBuffer pixels);
    void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, IntBuffer pixels);
    void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, FloatBuffer pixels);
    void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, DoubleBuffer pixels);
    void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, ByteBuffer pixels);
    void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, long pixels);
    void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, ShortBuffer pixels);
    void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, IntBuffer pixels);
    void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, FloatBuffer pixels);
    void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, DoubleBuffer pixels);
    void glCopyTexImage1D(int target, int level, int internalFormat, int x, int y, int width, int border);
    void glCopyTexImage2D(int target, int level, int internalFormat, int x, int y, int width, int height, int border);
    void glCopyTexSubImage1D(int target, int level, int xoffset, int x, int y, int width);
    void glCopyTexSubImage2D(int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
    void glTexParameteri(int target, int pname, int param);
    void glTexParameteriv(int target, int pname, IntBuffer params);
    void glTexParameterf(int target, int pname, float param);
    void glTexParameterfv(int target, int pname, FloatBuffer params);
    void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, ByteBuffer pixels);
    void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, long pixels);
    void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, ShortBuffer pixels);
    void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, IntBuffer pixels);
    void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, FloatBuffer pixels);
    void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, DoubleBuffer pixels);
    void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, ByteBuffer pixels);
    void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, long pixels);
    void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, ShortBuffer pixels);
    void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, IntBuffer pixels);
    void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, FloatBuffer pixels);
    void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, DoubleBuffer pixels);
    void glTranslatef(float var0, float var1, float var2);
    void glTranslated(double var0, double var2, double var4);
    void glVertex2f(float var0, float var1);
    void glVertex2s(short var0, short var1);
    void glVertex2i(int var0, int var1);
    void glVertex2d(double var0, double var2);
    void glVertex2fv(FloatBuffer coords);
    void glVertex2sv(ShortBuffer coords);
    void glVertex2iv(IntBuffer coords);
    void glVertex2dv(DoubleBuffer coords);
    void glVertex3f(float var0, float var1, float var2);
    void glVertex3s(short var0, short var1, short var2);
    void glVertex3i(int var0, int var1, int var2);
    void glVertex3d(double var0, double var2, double var4);
    void glVertex3fv(FloatBuffer coords);
    void glVertex3sv(ShortBuffer coords);
    void glVertex3iv(IntBuffer coords);
    void glVertex3dv(DoubleBuffer coords);
    void glVertex4f(float var0, float var1, float var2, float var3);
    void glVertex4s(short var0, short var1, short var2, short var3);
    void glVertex4i(int var0, int var1, int var2, int var3);
    void glVertex4d(double var0, double var2, double var4, double var6);
    void glVertex4fv(FloatBuffer coords);
    void glVertex4sv(ShortBuffer coords);
    void glVertex4iv(IntBuffer coords);
    void glVertex4dv(DoubleBuffer coords);
    void glVertexPointer(int size, int type, int stride, ByteBuffer pointer);
    void glVertexPointer(int size, int type, int stride, long pointer);
    void glVertexPointer(int size, int type, int stride, ShortBuffer pointer);
    void glVertexPointer(int size, int type, int stride, IntBuffer pointer);
    void glVertexPointer(int size, int type, int stride, FloatBuffer pointer);
    void glViewport(int x, int y, int w, int h);
    boolean glAreTexturesResident(int[] textures, ByteBuffer residences);
    void glClipPlane(int plane, double[] equation);
    void glColor3sv(short[] v);
    void glColor3iv(int[] v);
    void glColor3fv(float[] v);
    void glColor3dv(double[] v);
    void glColor3usv(short[] v);
    void glColor3uiv(int[] v);
    void glColor4sv(short[] v);
    void glColor4iv(int[] v);
    void glColor4fv(float[] v);
    void glColor4dv(double[] v);
    void glColor4usv(short[] v);
    void glColor4uiv(int[] v);
    void glDrawPixels(int width, int height, int format, int type, short[] pixels);
    void glDrawPixels(int width, int height, int format, int type, int[] pixels);
    void glDrawPixels(int width, int height, int format, int type, float[] pixels);
    void glEvalCoord1fv(float[] u);
    void glEvalCoord1dv(double[] u);
    void glEvalCoord2fv(float[] u);
    void glEvalCoord2dv(double[] u);
    void glFeedbackBuffer(int type, float[] buffer);
    void glFogiv(int pname, int[] params);
    void glFogfv(int pname, float[] params);
    void glGenTextures(int[] textures);
    void glDeleteTextures(int[] textures);
    void glGetClipPlane(int plane, double[] equation);
    void glGetFloatv(int pname, float[] params);
    void glGetIntegerv(int pname, int[] params);
    void glGetDoublev(int pname, double[] params);
    void glGetLightiv(int light, int pname, int[] data);
    void glGetLightfv(int light, int pname, float[] data);
    void glGetMapiv(int target, int query, int[] data);
    void glGetMapfv(int target, int query, float[] data);
    void glGetMapdv(int target, int query, double[] data);
    void glGetMaterialiv(int face, int pname, int[] data);
    void glGetMaterialfv(int face, int pname, float[] data);
    void glGetPixelMapfv(int map, float[] data);
    void glGetPixelMapusv(int map, short[] data);
    void glGetPixelMapuiv(int map, int[] data);
    void glGetTexEnviv(int env, int pname, int[] data);
    void glGetTexEnvfv(int env, int pname, float[] data);
    void glGetTexGeniv(int coord, int pname, int[] data);
    void glGetTexGenfv(int coord, int pname, float[] data);
    void glGetTexGendv(int coord, int pname, double[] data);
    void glGetTexImage(int tex, int level, int format, int type, short[] pixels);
    void glGetTexImage(int tex, int level, int format, int type, int[] pixels);
    void glGetTexImage(int tex, int level, int format, int type, float[] pixels);
    void glGetTexImage(int tex, int level, int format, int type, double[] pixels);
    void glGetTexLevelParameteriv(int target, int level, int pname, int[] params);
    void glGetTexLevelParameterfv(int target, int level, int pname, float[] params);
    void glGetTexParameteriv(int target, int pname, int[] params);
    void glGetTexParameterfv(int target, int pname, float[] params);
    void glIndexiv(int[] index);
    void glIndexsv(short[] index);
    void glIndexfv(float[] index);
    void glIndexdv(double[] index);
    void glInterleavedArrays(int format, int stride, short[] pointer);
    void glInterleavedArrays(int format, int stride, int[] pointer);
    void glInterleavedArrays(int format, int stride, float[] pointer);
    void glInterleavedArrays(int format, int stride, double[] pointer);
    void glLightModeliv(int pname, int[] params);
    void glLightModelfv(int pname, float[] params);
    void glLightiv(int light, int pname, int[] params);
    void glLightfv(int light, int pname, float[] params);
    void glLoadMatrixf(float[] m);
    void glLoadMatrixd(double[] m);
    void glMap1f(int target, float u1, float u2, int stride, int order, float[] points);
    void glMap1d(int target, double u1, double u2, int stride, int order, double[] points);
    void glMap2f(int target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float[] points);
    void glMap2d(int target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double[] points);
    void glMaterialiv(int face, int pname, int[] params);
    void glMaterialfv(int face, int pname, float[] params);
    void glMultMatrixf(float[] m);
    void glMultMatrixd(double[] m);
    void glNormal3fv(float[] v);
    void glNormal3sv(short[] v);
    void glNormal3iv(int[] v);
    void glNormal3dv(double[] v);
    void glPixelMapfv(int map, float[] values);
    void glPixelMapusv(int map, short[] values);
    void glPixelMapuiv(int map, int[] values);
    void glPrioritizeTextures(int[] textures, float[] priorities);
    void glRasterPos2iv(int[] coords);
    void glRasterPos2sv(short[] coords);
    void glRasterPos2fv(float[] coords);
    void glRasterPos2dv(double[] coords);
    void glRasterPos3iv(int[] coords);
    void glRasterPos3sv(short[] coords);
    void glRasterPos3fv(float[] coords);
    void glRasterPos3dv(double[] coords);
    void glRasterPos4iv(int[] coords);
    void glRasterPos4sv(short[] coords);
    void glRasterPos4fv(float[] coords);
    void glRasterPos4dv(double[] coords);
    void glReadPixels(int x, int y, int width, int height, int format, int type, short[] pixels);
    void glReadPixels(int x, int y, int width, int height, int format, int type, int[] pixels);
    void glReadPixels(int x, int y, int width, int height, int format, int type, float[] pixels);
    void glRectiv(int[] v1, int[] v2);
    void glRectsv(short[] v1, short[] v2);
    void glRectfv(float[] v1, float[] v2);
    void glRectdv(double[] v1, double[] v2);
    void glSelectBuffer(int[] buffer);
    void glTexCoord1fv(float[] v);
    void glTexCoord1sv(short[] v);
    void glTexCoord1iv(int[] v);
    void glTexCoord1dv(double[] v);
    void glTexCoord2fv(float[] v);
    void glTexCoord2sv(short[] v);
    void glTexCoord2iv(int[] v);
    void glTexCoord2dv(double[] v);
    void glTexCoord3fv(float[] v);
    void glTexCoord3sv(short[] v);
    void glTexCoord3iv(int[] v);
    void glTexCoord3dv(double[] v);
    void glTexCoord4fv(float[] v);
    void glTexCoord4sv(short[] v);
    void glTexCoord4iv(int[] v);
    void glTexCoord4dv(double[] v);
    void glTexEnviv(int target, int pname, int[] params);
    void glTexEnvfv(int target, int pname, float[] params);
    void glTexGeniv(int coord, int pname, int[] params);
    void glTexGenfv(int coord, int pname, float[] params);
    void glTexGendv(int coord, int pname, double[] params);
    void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, short[] pixels);
    void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, int[] pixels);
    void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, float[] pixels);
    void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, double[] pixels);
    void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, short[] pixels);
    void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, int[] pixels);
    void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, float[] pixels);
    void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, double[] pixels);
    void glTexParameteriv(int target, int pname, int[] params);
    void glTexParameterfv(int target, int pname, float[] params);
    void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, short[] pixels);
    void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, int[] pixels);
    void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, float[] pixels);
    void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, double[] pixels);
    void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, short[] pixels);
    void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, int[] pixels);
    void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, float[] pixels);
    void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, double[] pixels);
    void glVertex2fv(float[] coords);
    void glVertex2sv(short[] coords);
    void glVertex2iv(int[] coords);
    void glVertex2dv(double[] coords);
    void glVertex3fv(float[] coords);
    void glVertex3sv(short[] coords);
    void glVertex3iv(int[] coords);
    void glVertex3dv(double[] coords);
    void glVertex4fv(float[] coords);
    void glVertex4sv(short[] coords);
    void glVertex4iv(int[] coords);
    void glVertex4dv(double[] coords);

}
