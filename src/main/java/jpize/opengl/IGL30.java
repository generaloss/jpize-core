package jpize.opengl;

import java.nio.*;

public interface IGL30 extends IGL21 {

    int GL_MAJOR_VERSION = 33307;
    int GL_MINOR_VERSION = 33308;
    int GL_NUM_EXTENSIONS = 33309;
    int GL_CONTEXT_FLAGS = 33310;
    int GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 1;
    int GL_COMPARE_REF_TO_TEXTURE = 34894;
    int GL_CLIP_DISTANCE0 = 12288;
    int GL_CLIP_DISTANCE1 = 12289;
    int GL_CLIP_DISTANCE2 = 12290;
    int GL_CLIP_DISTANCE3 = 12291;
    int GL_CLIP_DISTANCE4 = 12292;
    int GL_CLIP_DISTANCE5 = 12293;
    int GL_CLIP_DISTANCE6 = 12294;
    int GL_CLIP_DISTANCE7 = 12295;
    int GL_MAX_CLIP_DISTANCES = 3378;
    int GL_MAX_VARYING_COMPONENTS = 35659;
    int GL_VERTEX_ATTRIB_ARRAY_INTEGER = 35069;
    int GL_SAMPLER_1D_ARRAY = 36288;
    int GL_SAMPLER_2D_ARRAY = 36289;
    int GL_SAMPLER_1D_ARRAY_SHADOW = 36291;
    int GL_SAMPLER_2D_ARRAY_SHADOW = 36292;
    int GL_SAMPLER_CUBE_SHADOW = 36293;
    int GL_UNSIGNED_INT_VEC2 = 36294;
    int GL_UNSIGNED_INT_VEC3 = 36295;
    int GL_UNSIGNED_INT_VEC4 = 36296;
    int GL_INT_SAMPLER_1D = 36297;
    int GL_INT_SAMPLER_2D = 36298;
    int GL_INT_SAMPLER_3D = 36299;
    int GL_INT_SAMPLER_CUBE = 36300;
    int GL_INT_SAMPLER_1D_ARRAY = 36302;
    int GL_INT_SAMPLER_2D_ARRAY = 36303;
    int GL_UNSIGNED_INT_SAMPLER_1D = 36305;
    int GL_UNSIGNED_INT_SAMPLER_2D = 36306;
    int GL_UNSIGNED_INT_SAMPLER_3D = 36307;
    int GL_UNSIGNED_INT_SAMPLER_CUBE = 36308;
    int GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 36310;
    int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 36311;
    int GL_MIN_PROGRAM_TEXEL_OFFSET = 35076;
    int GL_MAX_PROGRAM_TEXEL_OFFSET = 35077;
    int GL_QUERY_WAIT = 36371;
    int GL_QUERY_NO_WAIT = 36372;
    int GL_QUERY_BY_REGION_WAIT = 36373;
    int GL_QUERY_BY_REGION_NO_WAIT = 36374;
    int GL_MAP_READ_BIT = 1;
    int GL_MAP_WRITE_BIT = 2;
    int GL_MAP_INVALIDATE_RANGE_BIT = 4;
    int GL_MAP_INVALIDATE_BUFFER_BIT = 8;
    int GL_MAP_FLUSH_EXPLICIT_BIT = 16;
    int GL_MAP_UNSYNCHRONIZED_BIT = 32;
    int GL_BUFFER_ACCESS_FLAGS = 37151;
    int GL_BUFFER_MAP_LENGTH = 37152;
    int GL_BUFFER_MAP_OFFSET = 37153;
    int GL_CLAMP_VERTEX_COLOR = 35098;
    int GL_CLAMP_FRAGMENT_COLOR = 35099;
    int GL_CLAMP_READ_COLOR = 35100;
    int GL_FIXED_ONLY = 35101;
    int GL_DEPTH_COMPONENT32F = 36012;
    int GL_DEPTH32F_STENCIL8 = 36013;
    int GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 36269;
    int GL_TEXTURE_RED_TYPE = 35856;
    int GL_TEXTURE_GREEN_TYPE = 35857;
    int GL_TEXTURE_BLUE_TYPE = 35858;
    int GL_TEXTURE_ALPHA_TYPE = 35859;
    int GL_TEXTURE_LUMINANCE_TYPE = 35860;
    int GL_TEXTURE_INTENSITY_TYPE = 35861;
    int GL_TEXTURE_DEPTH_TYPE = 35862;
    int GL_UNSIGNED_NORMALIZED = 35863;
    int GL_RGBA32F = 34836;
    int GL_RGB32F = 34837;
    int GL_RGBA16F = 34842;
    int GL_RGB16F = 34843;
    int GL_R11F_G11F_B10F = 35898;
    int GL_UNSIGNED_INT_10F_11F_11F_REV = 35899;
    int GL_RGB9_E5 = 35901;
    int GL_UNSIGNED_INT_5_9_9_9_REV = 35902;
    int GL_TEXTURE_SHARED_SIZE = 35903;
    int GL_FRAMEBUFFER = 36160;
    int GL_READ_FRAMEBUFFER = 36008;
    int GL_DRAW_FRAMEBUFFER = 36009;
    int GL_RENDERBUFFER = 36161;
    int GL_STENCIL_INDEX1 = 36166;
    int GL_STENCIL_INDEX4 = 36167;
    int GL_STENCIL_INDEX8 = 36168;
    int GL_STENCIL_INDEX16 = 36169;
    int GL_RENDERBUFFER_WIDTH = 36162;
    int GL_RENDERBUFFER_HEIGHT = 36163;
    int GL_RENDERBUFFER_INTERNAL_FORMAT = 36164;
    int GL_RENDERBUFFER_RED_SIZE = 36176;
    int GL_RENDERBUFFER_GREEN_SIZE = 36177;
    int GL_RENDERBUFFER_BLUE_SIZE = 36178;
    int GL_RENDERBUFFER_ALPHA_SIZE = 36179;
    int GL_RENDERBUFFER_DEPTH_SIZE = 36180;
    int GL_RENDERBUFFER_STENCIL_SIZE = 36181;
    int GL_RENDERBUFFER_SAMPLES = 36011;
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 36052;
    int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 33296;
    int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 33297;
    int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 33298;
    int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 33299;
    int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 33300;
    int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 33301;
    int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 33302;
    int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 33303;
    int GL_FRAMEBUFFER_DEFAULT = 33304;
    int GL_INDEX = 33314;
    int GL_COLOR_ATTACHMENT0 = 36064;
    int GL_COLOR_ATTACHMENT1 = 36065;
    int GL_COLOR_ATTACHMENT2 = 36066;
    int GL_COLOR_ATTACHMENT3 = 36067;
    int GL_COLOR_ATTACHMENT4 = 36068;
    int GL_COLOR_ATTACHMENT5 = 36069;
    int GL_COLOR_ATTACHMENT6 = 36070;
    int GL_COLOR_ATTACHMENT7 = 36071;
    int GL_COLOR_ATTACHMENT8 = 36072;
    int GL_COLOR_ATTACHMENT9 = 36073;
    int GL_COLOR_ATTACHMENT10 = 36074;
    int GL_COLOR_ATTACHMENT11 = 36075;
    int GL_COLOR_ATTACHMENT12 = 36076;
    int GL_COLOR_ATTACHMENT13 = 36077;
    int GL_COLOR_ATTACHMENT14 = 36078;
    int GL_COLOR_ATTACHMENT15 = 36079;
    int GL_COLOR_ATTACHMENT16 = 36080;
    int GL_COLOR_ATTACHMENT17 = 36081;
    int GL_COLOR_ATTACHMENT18 = 36082;
    int GL_COLOR_ATTACHMENT19 = 36083;
    int GL_COLOR_ATTACHMENT20 = 36084;
    int GL_COLOR_ATTACHMENT21 = 36085;
    int GL_COLOR_ATTACHMENT22 = 36086;
    int GL_COLOR_ATTACHMENT23 = 36087;
    int GL_COLOR_ATTACHMENT24 = 36088;
    int GL_COLOR_ATTACHMENT25 = 36089;
    int GL_COLOR_ATTACHMENT26 = 36090;
    int GL_COLOR_ATTACHMENT27 = 36091;
    int GL_COLOR_ATTACHMENT28 = 36092;
    int GL_COLOR_ATTACHMENT29 = 36093;
    int GL_COLOR_ATTACHMENT30 = 36094;
    int GL_COLOR_ATTACHMENT31 = 36095;
    int GL_DEPTH_ATTACHMENT = 36096;
    int GL_STENCIL_ATTACHMENT = 36128;
    int GL_DEPTH_STENCIL_ATTACHMENT = 33306;
    int GL_MAX_SAMPLES = 36183;
    int GL_FRAMEBUFFER_COMPLETE = 36053;
    int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
    int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
    int GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 36059;
    int GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 36060;
    int GL_FRAMEBUFFER_UNSUPPORTED = 36061;
    int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 36182;
    int GL_FRAMEBUFFER_UNDEFINED = 33305;
    int GL_FRAMEBUFFER_BINDING = 36006;
    int GL_DRAW_FRAMEBUFFER_BINDING = 36006;
    int GL_READ_FRAMEBUFFER_BINDING = 36010;
    int GL_RENDERBUFFER_BINDING = 36007;
    int GL_MAX_COLOR_ATTACHMENTS = 36063;
    int GL_MAX_RENDERBUFFER_SIZE = 34024;
    int GL_INVALID_FRAMEBUFFER_OPERATION = 1286;
    int GL_DEPTH_STENCIL = 34041;
    int GL_UNSIGNED_INT_24_8 = 34042;
    int GL_DEPTH24_STENCIL8 = 35056;
    int GL_TEXTURE_STENCIL_SIZE = 35057;
    int GL_HALF_FLOAT = 5131;
    int GL_RGBA32UI = 36208;
    int GL_RGB32UI = 36209;
    int GL_RGBA16UI = 36214;
    int GL_RGB16UI = 36215;
    int GL_RGBA8UI = 36220;
    int GL_RGB8UI = 36221;
    int GL_RGBA32I = 36226;
    int GL_RGB32I = 36227;
    int GL_RGBA16I = 36232;
    int GL_RGB16I = 36233;
    int GL_RGBA8I = 36238;
    int GL_RGB8I = 36239;
    int GL_RED_INTEGER = 36244;
    int GL_GREEN_INTEGER = 36245;
    int GL_BLUE_INTEGER = 36246;
    int GL_ALPHA_INTEGER = 36247;
    int GL_RGB_INTEGER = 36248;
    int GL_RGBA_INTEGER = 36249;
    int GL_BGR_INTEGER = 36250;
    int GL_BGRA_INTEGER = 36251;
    int GL_TEXTURE_1D_ARRAY = 35864;
    int GL_TEXTURE_2D_ARRAY = 35866;
    int GL_PROXY_TEXTURE_2D_ARRAY = 35867;
    int GL_PROXY_TEXTURE_1D_ARRAY = 35865;
    int GL_TEXTURE_BINDING_1D_ARRAY = 35868;
    int GL_TEXTURE_BINDING_2D_ARRAY = 35869;
    int GL_MAX_ARRAY_TEXTURE_LAYERS = 35071;
    int GL_COMPRESSED_RED_RGTC1 = 36283;
    int GL_COMPRESSED_SIGNED_RED_RGTC1 = 36284;
    int GL_COMPRESSED_RG_RGTC2 = 36285;
    int GL_COMPRESSED_SIGNED_RG_RGTC2 = 36286;
    int GL_R8 = 33321;
    int GL_R16 = 33322;
    int GL_RG8 = 33323;
    int GL_RG16 = 33324;
    int GL_R16F = 33325;
    int GL_R32F = 33326;
    int GL_RG16F = 33327;
    int GL_RG32F = 33328;
    int GL_R8I = 33329;
    int GL_R8UI = 33330;
    int GL_R16I = 33331;
    int GL_R16UI = 33332;
    int GL_R32I = 33333;
    int GL_R32UI = 33334;
    int GL_RG8I = 33335;
    int GL_RG8UI = 33336;
    int GL_RG16I = 33337;
    int GL_RG16UI = 33338;
    int GL_RG32I = 33339;
    int GL_RG32UI = 33340;
    int GL_RG = 33319;
    int GL_COMPRESSED_RED = 33317;
    int GL_COMPRESSED_RG = 33318;
    int GL_RG_INTEGER = 33320;
    int GL_TRANSFORM_FEEDBACK_BUFFER = 35982;
    int GL_TRANSFORM_FEEDBACK_BUFFER_START = 35972;
    int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 35973;
    int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 35983;
    int GL_INTERLEAVED_ATTRIBS = 35980;
    int GL_SEPARATE_ATTRIBS = 35981;
    int GL_PRIMITIVES_GENERATED = 35975;
    int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 35976;
    int GL_RASTERIZER_DISCARD = 35977;
    int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 35978;
    int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 35979;
    int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 35968;
    int GL_TRANSFORM_FEEDBACK_VARYINGS = 35971;
    int GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 35967;
    int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 35958;
    int GL_VERTEX_ARRAY_BINDING = 34229;
    int GL_FRAMEBUFFER_SRGB = 36281;

    long nglGetStringi(int name, int index);
    String glGetStringi(int name, int index);
    void nglClearBufferiv(int buffer, int drawbuffer, long value);
    void glClearBufferiv(int buffer, int drawbuffer, IntBuffer value);
    void nglClearBufferuiv(int buffer, int drawbuffer, long value);
    void glClearBufferuiv(int buffer, int drawbuffer, IntBuffer value);
    void nglClearBufferfv(int buffer, int drawbuffer, long value);
    void glClearBufferfv(int buffer, int drawbuffer, FloatBuffer value);
    void glClearBufferfi(int buffer, int drawbuffer, float depth, int stencil);
    void glVertexAttribI1i(int index, int x);
    void glVertexAttribI2i(int index, int x, int y);
    void glVertexAttribI3i(int index, int x, int y, int z);
    void glVertexAttribI4i(int index, int x, int y, int z, int w);
    void glVertexAttribI1ui(int index, int x);
    void glVertexAttribI2ui(int index, int x, int y);
    void glVertexAttribI3ui(int index, int x, int y, int z);
    void glVertexAttribI4ui(int index, int x, int y, int z, int w);
    void nglVertexAttribI1iv(int index, long v);
    void glVertexAttribI1iv(int index, IntBuffer v);
    void nglVertexAttribI2iv(int index, long v);
    void glVertexAttribI2iv(int index, IntBuffer v);
    void nglVertexAttribI3iv(int index, long v);
    void glVertexAttribI3iv(int index, IntBuffer v);
    void nglVertexAttribI4iv(int index, long v);
    void glVertexAttribI4iv(int index, IntBuffer v);
    void nglVertexAttribI1uiv(int index, long v);
    void glVertexAttribI1uiv(int index, IntBuffer v);
    void nglVertexAttribI2uiv(int index, long v);
    void glVertexAttribI2uiv(int index, IntBuffer v);
    void nglVertexAttribI3uiv(int index, long v);
    void glVertexAttribI3uiv(int index, IntBuffer v);
    void nglVertexAttribI4uiv(int index, long v);
    void glVertexAttribI4uiv(int index, IntBuffer v);
    void nglVertexAttribI4bv(int index, long v);
    void glVertexAttribI4bv(int index, ByteBuffer v);
    void nglVertexAttribI4sv(int index, long v);
    void glVertexAttribI4sv(int index, ShortBuffer v);
    void nglVertexAttribI4ubv(int index, long v);
    void glVertexAttribI4ubv(int index, ByteBuffer v);
    void nglVertexAttribI4usv(int index, long v);
    void glVertexAttribI4usv(int index, ShortBuffer v);
    void nglVertexAttribIPointer(int index, int size, int type, int stride, long pointer);
    void glVertexAttribIPointer(int index, int size, int type, int stride, ByteBuffer pointer);
    void glVertexAttribIPointer(int index, int size, int type, int stride, long pointer);
    void glVertexAttribIPointer(int index, int size, int type, int stride, ShortBuffer pointer);
    void glVertexAttribIPointer(int index, int size, int type, int stride, IntBuffer pointer);
    void nglGetVertexAttribIiv(int index, int pname, long params);
    void glGetVertexAttribIiv(int index, int pname, IntBuffer params);
    int glGetVertexAttribIi(int index, int pname);
    void nglGetVertexAttribIuiv(int index, int pname, long params);
    void glGetVertexAttribIuiv(int index, int pname, IntBuffer params);
    int glGetVertexAttribIui(int index, int pname);
    void glUniform1ui(int location, int v0);
    void glUniform2ui(int location, int v0, int v1);
    void glUniform3ui(int location, int v0, int v1, int v2);
    void glUniform4ui(int location, int v0, int v1, int v2, int v3);
    void nglUniform1uiv(int location, int count, long value);
    void glUniform1uiv(int location, IntBuffer value);
    void nglUniform2uiv(int location, int count, long value);
    void glUniform2uiv(int location, IntBuffer value);
    void nglUniform3uiv(int location, int count, long value);
    void glUniform3uiv(int location, IntBuffer value);
    void nglUniform4uiv(int location, int count, long value);
    void glUniform4uiv(int location, IntBuffer value);
    void nglGetUniformuiv(int program, int location, long params);
    void glGetUniformuiv(int program, int location, IntBuffer params);
    int glGetUniformui(int program, int location);
    void nglBindFragDataLocation(int program, int colorNumber, long name);
    void glBindFragDataLocation(int program, int colorNumber, ByteBuffer name);
    void glBindFragDataLocation(int program, int colorNumber, CharSequence name);
    int nglGetFragDataLocation(int program, long name);
    int glGetFragDataLocation(int program, ByteBuffer name);
    int glGetFragDataLocation(int program, CharSequence name);
    void glBeginConditionalRender(int id, int mode);
    void glEndConditionalRender();
    long nglMapBufferRange(int target, long offset, long length, int access);
    ByteBuffer glMapBufferRange(int target, long offset, long length, int access);
    ByteBuffer glMapBufferRange(int target, long offset, long length, int access, ByteBuffer old_buffer);
    void glFlushMappedBufferRange(int target, long offset, long length);
    void glClampColor(int target, int clamp);
    boolean glIsRenderbuffer(int renderbuffer);
    void glBindRenderbuffer(int target, int renderbuffer);
    void nglDeleteRenderbuffers(int n, long renderbuffers);
    void glDeleteRenderbuffers(IntBuffer renderbuffers);
    void glDeleteRenderbuffers(int renderbuffer);
    void nglGenRenderbuffers(int n, long renderbuffers);
    void glGenRenderbuffers(IntBuffer renderbuffers);
    int glGenRenderbuffers();
    void glRenderbufferStorage(int target, int internalformat, int width, int height);
    void glRenderbufferStorageMultisample(int target, int samples, int internalformat, int width, int height);
    void nglGetRenderbufferParameteriv(int target, int pname, long params);
    void glGetRenderbufferParameteriv(int target, int pname, IntBuffer params);
    int glGetRenderbufferParameteri(int target, int pname);
    boolean glIsFramebuffer(int framebuffer);
    void glBindFramebuffer(int target, int framebuffer);
    void nglDeleteFramebuffers(int n, long framebuffers);
    void glDeleteFramebuffers(IntBuffer framebuffers);
    void glDeleteFramebuffers(int framebuffer);
    void nglGenFramebuffers(int n, long framebuffers);
    void glGenFramebuffers(IntBuffer framebuffers);
    int glGenFramebuffers();
    int glCheckFramebufferStatus(int target);
    void glFramebufferTexture1D(int target, int attachment, int textarget, int texture, int level);
    void glFramebufferTexture2D(int target, int attachment, int textarget, int texture, int level);
    void glFramebufferTexture3D(int target, int attachment, int textarget, int texture, int level, int layer);
    void glFramebufferTextureLayer(int target, int attachment, int texture, int level, int layer);
    void glFramebufferRenderbuffer(int target, int attachment, int renderbuffertarget, int renderbuffer);
    void nglGetFramebufferAttachmentParameteriv(int target, int attachment, int pname, long params);
    void glGetFramebufferAttachmentParameteriv(int target, int attachment, int pname, IntBuffer params);
    int glGetFramebufferAttachmentParameteri(int target, int attachment, int pname);
    void glBlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);
    void glGenerateMipmap(int target);
    void nglTexParameterIiv(int target, int pname, long params);
    void glTexParameterIiv(int target, int pname, IntBuffer params);
    void glTexParameterIi(int target, int pname, int param);
    void nglTexParameterIuiv(int target, int pname, long params);
    void glTexParameterIuiv(int target, int pname, IntBuffer params);
    void glTexParameterIui(int target, int pname, int param);
    void nglGetTexParameterIiv(int target, int pname, long params);
    void glGetTexParameterIiv(int target, int pname, IntBuffer params);
    int glGetTexParameterIi(int target, int pname);
    void nglGetTexParameterIuiv(int target, int pname, long params);
    void glGetTexParameterIuiv(int target, int pname, IntBuffer params);
    int glGetTexParameterIui(int target, int pname);
    void glColorMaski(int buf, boolean r, boolean g, boolean b, boolean a);
    void nglGetBooleani_v(int target, int index, long data);
    void glGetBooleani_v(int target, int index, ByteBuffer data);
    boolean glGetBooleani(int target, int index);
    void nglGetIntegeri_v(int target, int index, long data);
    void glGetIntegeri_v(int target, int index, IntBuffer data);
    int glGetIntegeri(int target, int index);
    void glEnablei(int cap, int index);
    void glDisablei(int target, int index);
    boolean glIsEnabledi(int target, int index);
    void glBindBufferRange(int target, int index, int buffer, long offset, long size);
    void glBindBufferBase(int target, int index, int buffer);
    void glBeginTransformFeedback(int primitiveMode);
    void glEndTransformFeedback();
    void nglTransformFeedbackVaryings(int program, int count, long varyings, int bufferMode);
    void glTransformFeedbackVaryings(int program, PointerBuffer varyings, int bufferMode);
    void glTransformFeedbackVaryings(int program, CharSequence[] varyings, int bufferMode);
    void glTransformFeedbackVaryings(int program, CharSequence varying, int bufferMode);
    void nglGetTransformFeedbackVarying(int program, int index, int bufSize, long length, long size, long type, long name);
    void glGetTransformFeedbackVarying(int program, int index, IntBuffer length, IntBuffer size, IntBuffer type, ByteBuffer name);
    String glGetTransformFeedbackVarying(int program, int index, int bufSize, IntBuffer size, IntBuffer type);
    String glGetTransformFeedbackVarying(int program, int index, IntBuffer size, IntBuffer type);
    void glBindVertexArray(int array);
    void nglDeleteVertexArrays(int n, long arrays);
    void glDeleteVertexArrays(IntBuffer arrays);
    void glDeleteVertexArrays(int array);
    void nglGenVertexArrays(int n, long arrays);
    void glGenVertexArrays(IntBuffer arrays);
    int glGenVertexArrays();
    boolean glIsVertexArray(int array);
    void glClearBufferiv(int buffer, int drawbuffer, int[] value);
    void glClearBufferuiv(int buffer, int drawbuffer, int[] value);
    void glClearBufferfv(int buffer, int drawbuffer, float[] value);
    void glVertexAttribI1iv(int index, int[] v);
    void glVertexAttribI2iv(int index, int[] v);
    void glVertexAttribI3iv(int index, int[] v);
    void glVertexAttribI4iv(int index, int[] v);
    void glVertexAttribI1uiv(int index, int[] v);
    void glVertexAttribI2uiv(int index, int[] v);
    void glVertexAttribI3uiv(int index, int[] v);
    void glVertexAttribI4uiv(int index, int[] v);
    void glVertexAttribI4sv(int index, short[] v);
    void glVertexAttribI4usv(int index, short[] v);
    void glGetVertexAttribIiv(int index, int pname, int[] params);
    void glGetVertexAttribIuiv(int index, int pname, int[] params);
    void glUniform1uiv(int location, int[] value);
    void glUniform2uiv(int location, int[] value);
    void glUniform3uiv(int location, int[] value);
    void glUniform4uiv(int location, int[] value);
    void glGetUniformuiv(int program, int location, int[] params);
    void glDeleteRenderbuffers(int[] renderbuffers);
    void glGenRenderbuffers(int[] renderbuffers);
    void glGetRenderbufferParameteriv(int target, int pname, int[] params);
    void glDeleteFramebuffers(int[] framebuffers);
    void glGenFramebuffers(int[] framebuffers);
    void glGetFramebufferAttachmentParameteriv(int target, int attachment, int pname, int[] params);
    void glTexParameterIiv(int target, int pname, int[] params);
    void glTexParameterIuiv(int target, int pname, int[] params);
    void glGetTexParameterIiv(int target, int pname, int[] params);
    void glGetTexParameterIuiv(int target, int pname, int[] params);
    void glGetIntegeri_v(int target, int index, int[] data);
    void glGetTransformFeedbackVarying(int program, int index, int[] length, int[] size, int[] type, ByteBuffer name);
    void glDeleteVertexArrays(int[] arrays);
    void glGenVertexArrays(int[] arrays);
}