package jpize.opengl.gl;

import java.nio.*;

public interface GLI13 extends GLI12 {

    int GL_COMPRESSED_ALPHA = 34025;
    int GL_COMPRESSED_LUMINANCE = 34026;
    int GL_COMPRESSED_LUMINANCE_ALPHA = 34027;
    int GL_COMPRESSED_INTENSITY = 34028;
    int GL_COMPRESSED_RGB = 34029;
    int GL_COMPRESSED_RGBA = 34030;
    int GL_TEXTURE_COMPRESSION_HINT = 34031;
    int GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 34464;
    int GL_TEXTURE_COMPRESSED = 34465;
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS = 34466;
    int GL_COMPRESSED_TEXTURE_FORMATS = 34467;
    int GL_NORMAL_MAP = 34065;
    int GL_REFLECTION_MAP = 34066;
    int GL_TEXTURE_CUBE_MAP = 34067;
    int GL_TEXTURE_BINDING_CUBE_MAP = 34068;
    int GL_TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
    int GL_PROXY_TEXTURE_CUBE_MAP = 34075;
    int GL_MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
    int GL_MULTISAMPLE = 32925;
    int GL_SAMPLE_ALPHA_TO_COVERAGE = 32926;
    int GL_SAMPLE_ALPHA_TO_ONE = 32927;
    int GL_SAMPLE_COVERAGE = 32928;
    int GL_MULTISAMPLE_BIT = 536870912;
    int GL_SAMPLE_BUFFERS = 32936;
    int GL_SAMPLES = 32937;
    int GL_SAMPLE_COVERAGE_VALUE = 32938;
    int GL_SAMPLE_COVERAGE_INVERT = 32939;
    int GL_TEXTURE0 = 33984;
    int GL_TEXTURE1 = 33985;
    int GL_TEXTURE2 = 33986;
    int GL_TEXTURE3 = 33987;
    int GL_TEXTURE4 = 33988;
    int GL_TEXTURE5 = 33989;
    int GL_TEXTURE6 = 33990;
    int GL_TEXTURE7 = 33991;
    int GL_TEXTURE8 = 33992;
    int GL_TEXTURE9 = 33993;
    int GL_TEXTURE10 = 33994;
    int GL_TEXTURE11 = 33995;
    int GL_TEXTURE12 = 33996;
    int GL_TEXTURE13 = 33997;
    int GL_TEXTURE14 = 33998;
    int GL_TEXTURE15 = 33999;
    int GL_TEXTURE16 = 34000;
    int GL_TEXTURE17 = 34001;
    int GL_TEXTURE18 = 34002;
    int GL_TEXTURE19 = 34003;
    int GL_TEXTURE20 = 34004;
    int GL_TEXTURE21 = 34005;
    int GL_TEXTURE22 = 34006;
    int GL_TEXTURE23 = 34007;
    int GL_TEXTURE24 = 34008;
    int GL_TEXTURE25 = 34009;
    int GL_TEXTURE26 = 34010;
    int GL_TEXTURE27 = 34011;
    int GL_TEXTURE28 = 34012;
    int GL_TEXTURE29 = 34013;
    int GL_TEXTURE30 = 34014;
    int GL_TEXTURE31 = 34015;
    int GL_ACTIVE_TEXTURE = 34016;
    int GL_CLIENT_ACTIVE_TEXTURE = 34017;
    int GL_MAX_TEXTURE_UNITS = 34018;
    int GL_COMBINE = 34160;
    int GL_COMBINE_RGB = 34161;
    int GL_COMBINE_ALPHA = 34162;
    int GL_SOURCE0_RGB = 34176;
    int GL_SOURCE1_RGB = 34177;
    int GL_SOURCE2_RGB = 34178;
    int GL_SOURCE0_ALPHA = 34184;
    int GL_SOURCE1_ALPHA = 34185;
    int GL_SOURCE2_ALPHA = 34186;
    int GL_OPERAND0_RGB = 34192;
    int GL_OPERAND1_RGB = 34193;
    int GL_OPERAND2_RGB = 34194;
    int GL_OPERAND0_ALPHA = 34200;
    int GL_OPERAND1_ALPHA = 34201;
    int GL_OPERAND2_ALPHA = 34202;
    int GL_RGB_SCALE = 34163;
    int GL_ADD_SIGNED = 34164;
    int GL_INTERPOLATE = 34165;
    int GL_SUBTRACT = 34023;
    int GL_CONSTANT = 34166;
    int GL_PRIMARY_COLOR = 34167;
    int GL_PREVIOUS = 34168;
    int GL_DOT3_RGB = 34478;
    int GL_DOT3_RGBA = 34479;
    int GL_CLAMP_TO_BORDER = 33069;
    int GL_TRANSPOSE_MODELVIEW_MATRIX = 34019;
    int GL_TRANSPOSE_PROJECTION_MATRIX = 34020;
    int GL_TRANSPOSE_TEXTURE_MATRIX = 34021;
    int GL_TRANSPOSE_COLOR_MATRIX = 34022;

    void nglCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, long data);
    void glCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, long data);
    void glCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, ByteBuffer data);
    void nglCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, long data);
    void glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, long data);
    void glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, ByteBuffer data);
    void nglCompressedTexImage1D(int target, int level, int internalformat, int width, int border, int imageSize, long data);
    void glCompressedTexImage1D(int target, int level, int internalformat, int width, int border, int imageSize, long data);
    void glCompressedTexImage1D(int target, int level, int internalformat, int width, int border, ByteBuffer data);
    void nglCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, long data);
    void glCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, long data);
    void glCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, ByteBuffer data);
    void nglCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, long data);
    void glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, long data);
    void glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, ByteBuffer data);
    void nglCompressedTexSubImage1D(int target, int level, int xoffset, int width, int format, int imageSize, long data);
    void glCompressedTexSubImage1D(int target, int level, int xoffset, int width, int format, int imageSize, long data);
    void glCompressedTexSubImage1D(int target, int level, int xoffset, int width, int format, ByteBuffer data);
    void nglGetCompressedTexImage(int target, int level, long pixels);
    void glGetCompressedTexImage(int target, int level, ByteBuffer pixels);
    void glGetCompressedTexImage(int target, int level, long pixels);
    void glSampleCoverage(float value, boolean invert);
    void glActiveTexture(int texture);
    void glClientActiveTexture(int var0);
    void glMultiTexCoord1f(int var0, float var1);
    void glMultiTexCoord1s(int var0, short var1);
    void glMultiTexCoord1i(int var0, int var1);
    void glMultiTexCoord1d(int var0, double var1);
    void nglMultiTexCoord1fv(int var0, long var1);
    void glMultiTexCoord1fv(int texture, FloatBuffer v);
    void nglMultiTexCoord1sv(int var0, long var1);
    void glMultiTexCoord1sv(int texture, ShortBuffer v);
    void nglMultiTexCoord1iv(int var0, long var1);
    void glMultiTexCoord1iv(int texture, IntBuffer v);
    void nglMultiTexCoord1dv(int var0, long var1);
    void glMultiTexCoord1dv(int texture, DoubleBuffer v);
    void glMultiTexCoord2f(int var0, float var1, float var2);
    void glMultiTexCoord2s(int var0, short var1, short var2);
    void glMultiTexCoord2i(int var0, int var1, int var2);
    void glMultiTexCoord2d(int var0, double var1, double var3);
    void nglMultiTexCoord2fv(int var0, long var1);
    void glMultiTexCoord2fv(int texture, FloatBuffer v);
    void nglMultiTexCoord2sv(int var0, long var1);
    void glMultiTexCoord2sv(int texture, ShortBuffer v);
    void nglMultiTexCoord2iv(int var0, long var1);
    void glMultiTexCoord2iv(int texture, IntBuffer v);
    void nglMultiTexCoord2dv(int var0, long var1);
    void glMultiTexCoord2dv(int texture, DoubleBuffer v);
    void glMultiTexCoord3f(int var0, float var1, float var2, float var3);
    void glMultiTexCoord3s(int var0, short var1, short var2, short var3);
    void glMultiTexCoord3i(int var0, int var1, int var2, int var3);
    void glMultiTexCoord3d(int var0, double var1, double var3, double var5);
    void nglMultiTexCoord3fv(int var0, long var1);
    void glMultiTexCoord3fv(int texture, FloatBuffer v);
    void nglMultiTexCoord3sv(int var0, long var1);
    void glMultiTexCoord3sv(int texture, ShortBuffer v);
    void nglMultiTexCoord3iv(int var0, long var1);
    void glMultiTexCoord3iv(int texture, IntBuffer v);
    void nglMultiTexCoord3dv(int var0, long var1);
    void glMultiTexCoord3dv(int texture, DoubleBuffer v);
    void glMultiTexCoord4f(int var0, float var1, float var2, float var3, float var4);
    void glMultiTexCoord4s(int var0, short var1, short var2, short var3, short var4);
    void glMultiTexCoord4i(int var0, int var1, int var2, int var3, int var4);
    void glMultiTexCoord4d(int var0, double var1, double var3, double var5, double var7);
    void nglMultiTexCoord4fv(int var0, long var1);
    void glMultiTexCoord4fv(int texture, FloatBuffer v);
    void nglMultiTexCoord4sv(int var0, long var1);
    void glMultiTexCoord4sv(int texture, ShortBuffer v);
    void nglMultiTexCoord4iv(int var0, long var1);
    void glMultiTexCoord4iv(int texture, IntBuffer v);
    void nglMultiTexCoord4dv(int var0, long var1);
    void glMultiTexCoord4dv(int texture, DoubleBuffer v);
    void nglLoadTransposeMatrixf(long var0);
    void glLoadTransposeMatrixf(FloatBuffer m);
    void nglLoadTransposeMatrixd(long var0);
    void glLoadTransposeMatrixd(DoubleBuffer m);
    void nglMultTransposeMatrixf(long var0);
    void glMultTransposeMatrixf(FloatBuffer m);
    void nglMultTransposeMatrixd(long var0);
    void glMultTransposeMatrixd(DoubleBuffer m);
    void glMultiTexCoord1fv(int texture, float[] v);
    void glMultiTexCoord1sv(int texture, short[] v);
    void glMultiTexCoord1iv(int texture, int[] v);
    void glMultiTexCoord1dv(int texture, double[] v);
    void glMultiTexCoord2fv(int texture, float[] v);
    void glMultiTexCoord2sv(int texture, short[] v);
    void glMultiTexCoord2iv(int texture, int[] v);
    void glMultiTexCoord2dv(int texture, double[] v);
    void glMultiTexCoord3fv(int texture, float[] v);
    void glMultiTexCoord3sv(int texture, short[] v);
    void glMultiTexCoord3iv(int texture, int[] v);
    void glMultiTexCoord3dv(int texture, double[] v);
    void glMultiTexCoord4fv(int texture, float[] v);
    void glMultiTexCoord4sv(int texture, short[] v);
    void glMultiTexCoord4iv(int texture, int[] v);
    void glMultiTexCoord4dv(int texture, double[] v);
    void glLoadTransposeMatrixf(float[] m);
    void glLoadTransposeMatrixd(double[] m);
    void glMultTransposeMatrixf(float[] m);
    void glMultTransposeMatrixd(double[] m);

}
